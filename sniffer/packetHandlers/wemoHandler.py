from networking.http import HTTP
from networking.rawPacketHandling import build_tcp_syn_ack
from networking.rawPacketHandling import build_tcp_response
from networking.rawPacketHandling import build_tcp_ack

# Stock HTTP Responses
HTTP_REQUEST_SETUP_PREAMBLE = '/setup.xml'
HTTP_RESPONSE_SETUP_ONE = 'HTTP/1.1 200 OK\r\nCONTENT-LENGTH: 4751\r\nCONTENT-TYPE: text/xml\r\nDATE: Wed, 04 Dec 2019 20:57:23 GMT\r\nLAST-MODIFIED: Sat, 01 Jan 2000 00:00:53 GMT\r\nSERVER: Unspecified, UPnP/1.0, Unspecified\r\nX-User-Agent: redsonic\r\nCONNECTION: close\r\n\r\n'
HTTP_RESPONSE_SETUP_TWO = '<?xml version="1.0"?>\n<root xmlns="urn:Belkin:device-1-0">\n  <specVersion>\n    <major>1</major>\n    <minor>0</minor>\n  </specVersion>\n  <device>\n<deviceType>urn:Belkin:device:insight:1</deviceType>\n<friendlyName>Kalki</friendlyName>\n    <manufacturer>Belkin International Inc.</manufacturer>\n    <manufacturerURL>http://www.belkin.com</manufacturerURL>\n    <modelDescription>Belkin Insight 1.0</modelDescription>\n    <modelName>Insight</modelName>\n    <modelNumber>1.0</modelNumber>\n    <modelURL>http://www.belkin.com/plugin/</modelURL>\n<serialNumber>231803K1200988</serialNumber>\n<UDN>uuid:Insight-1_0-231803K1200988</UDN>\n    <UPC>123456789</UPC>\n<macAddress>149182B51D10</macAddress>\n<firmwareVersion>WeMo_WW_2.00.10062.PVT-OWRT-InsightV2</firmwareVersion>\n<iconVersion>1|49153</iconVersion>\n<binaryState>0</binaryState>\n    <iconList> \n      <icon> \n        <mimetype>jpg</mimetype> \n        <width>100</width> \n        <height>100</height> \n        <depth>100</depth> \n         <url>icon.jpg</url> \n      </icon> \n    </iconList>\n    <serviceList>\n      <service>\n        <serviceType>urn:Belkin:service:WiFiSetup:1</serviceType>\n        <serviceId>urn:Belkin:serviceId:WiFiSetup1</serviceId>\n        <controlURL>/upnp/control/WiFiSetup1</controlURL>\n        <eventSubURL>/upnp/event/WiFiSetup1</eventSubURL>\n        <SCPDURL>/setupservice.xml</SCPDURL>\n      </service>\n      <service>\n        <serviceType>urn:Belkin:service:timesync:1</serviceType>\n  '
HTTP_RESPONSE_SETUP_THREE = '      <serviceId>urn:Belkin:serviceId:timesync1</serviceId>\n        <controlURL>/upnp/control/timesync1</controlURL>\n        <eventSubURL>/upnp/event/timesync1</eventSubURL>\n        <SCPDURL>/timesyncservice.xml</SCPDURL>\n      </service>\n      <service>\n        <serviceType>urn:Belkin:service:basicevent:1</serviceType>\n        <serviceId>urn:Belkin:serviceId:basicevent1</serviceId>\n        <controlURL>/upnp/control/basicevent1</controlURL>\n        <eventSubURL>/upnp/event/basicevent1</eventSubURL>\n        <SCPDURL>/eventservice.xml</SCPDURL>\n      </service>\n      <service>\n        <serviceType>urn:Belkin:service:firmwareupdate:1</serviceType>\n        <serviceId>urn:Belkin:serviceId:firmwareupdate1</serviceId>\n        <controlURL>/upnp/control/firmwareupdate1</controlURL>\n        <eventSubURL>/upnp/event/firmwareupdate1</eventSubURL>\n        <SCPDURL>/firmwareupdate.xml</SCPDURL>\n      </service>\n      <service>\n        <serviceType>urn:Belkin:service:rules:1</serviceType>\n        <serviceId>urn:Belkin:serviceId:rules1</serviceId>\n        <controlURL>/upnp/control/rules1</controlURL>\n        <eventSubURL>/upnp/event/rules1</eventSubURL>\n        <SCPDURL>/rulesservice.xml</SCPDURL>\n      </service>\n\t  \n      <service>\n        <serviceType>urn:Belkin:service:metainfo:1</serviceType>\n        <serviceId>urn:Belkin:serviceId:metainfo1</serviceId>\n        <controlURL>/upnp/control/metainfo1</controlURL>\n        <eventSubURL>/upnp/event/metai'
HTTP_RESPONSE_SETUP_FOUR = 'nfo1</eventSubURL>\n        <SCPDURL>/metainfoservice.xml</SCPDURL>\n      </service>\n\n      <service>\n        <serviceType>urn:Belkin:service:remoteaccess:1</serviceType>\n        <serviceId>urn:Belkin:serviceId:remoteaccess1</serviceId>\n        <controlURL>/upnp/control/remoteaccess1</controlURL>\n        <eventSubURL>/upnp/event/remoteaccess1</eventSubURL>\n        <SCPDURL>/remoteaccess.xml</SCPDURL>\n      </service>\n\t   \n      <service>\n        <serviceType>urn:Belkin:service:deviceinfo:1</serviceType>\n        <serviceId>urn:Belkin:serviceId:deviceinfo1</serviceId>\n        <controlURL>/upnp/control/deviceinfo1</controlURL>\n        <eventSubURL>/upnp/event/deviceinfo1</eventSubURL>\n        <SCPDURL>/deviceinfoservice.xml</SCPDURL>\n      </service>\n\n      <service>\n        <serviceType>urn:Belkin:service:insight:1</serviceType>\n        <serviceId>urn:Belkin:serviceId:insight1</serviceId>\n        <controlURL>/upnp/control/insight1</controlURL>\n        <eventSubURL>/upnp/event/insight1</eventSubURL>\n        <SCPDURL>/insightservice.xml</SCPDURL>\n      </service>\n\n      <service>\n        <serviceType>urn:Belkin:service:smartsetup:1</serviceType>\n        <serviceId>urn:Belkin:serviceId:smartsetup1</serviceId>\n        <controlURL>/upnp/control/smartsetup1</controlURL>\n        <eventSubURL>/upnp/event/smartsetup1</eventSubURL>\n        <SCPDURL>/smartsetup.xml</SCPDURL>\n      </service>\n      \n      <service>\n        '
HTTP_RESPONSE_SETUP_FIVE = '<serviceType>urn:Belkin:service:manufacture:1</serviceType>\n        <serviceId>urn:Belkin:serviceId:manufacture1</serviceId>\n        <controlURL>/upnp/control/manufacture1</controlURL>\n        <eventSubURL>/upnp/event/manufacture1</eventSubURL>\n        <SCPDURL>/manufacture.xml</SCPDURL>\n      </service>\n\n    </serviceList>\n   <presentationURL>/pluginpres.html</presentationURL>\n</device>\n</root>\n'

HTTP_REQUEST_SETUPSERVICE_PREAMBLE = '/setupservice.xml'
HTTP_RESPONSE_SETUPSERVICE_ONE = 'HTTP/1.1 200 OK\r\nCONTENT-LENGTH: 3278\r\nCONTENT-TYPE: text/xml\r\nDATE: Wed, 04 Dec 2019 20:57:23 GMT\r\nLAST-MODIFIED: Sat, 01 Jan 2000 00:00:31 GMT\r\nSERVER: Unspecified, UPnP/1.0, Unspecified\r\nX-User-Agent: redsonic\r\nCONNECTION: close\r\n\r\n'
HTTP_RESPONSE_SETUPSERVICE_TWO = '<?xml version="1.0"?>\n<scpd xmlns="urn:Belkin:service-1-0">\n\n  <specVersion>\n    <major>1</major>\n    <minor>0</minor>\n  </specVersion>\n  \n<actionList>\n    <action>\n        <name>GetApList</name>\n        <argumentList>\n         <argument>\n         <retval />\n         <name>ApList</name>\n         <relatedStateVariable>ApList</relatedStateVariable>\n         <direction>out</direction>\n         </argument>\n         </argumentList>\n    </action>\n    \n    <action>\n        <name>GetNetworkList</name>\n        <argumentList>\n         <argument>\n         <retval />\n         <name>NetworkList</name>\n         <relatedStateVariable>NetworkList</relatedStateVariable>\n         <direction>out</direction>\n         </argument>\n         </argumentList>\n    </action>\n    \n    <action>\n      <name>ConnectHomeNetwork</name>    \n      <argumentList>\n\n         <argument>\n           <retval />\n           <name>ssid</name>\n           <relatedStateVariable>ssid</relatedStateVariable>\n           <direction>in</direction>\n          </argument>\n          \n          <argument>\n         <retval />\n        <name>auth</name>\n        <relatedStateVariable>auth</relatedStateVariable>\n        <direction>in</direction>\n        </argument>\n\n       <argument>\n             <retval />\n             <name>password</name>\n             <relatedStateVariable>password</relatedStateVariable>\n             <direction>in</direction>\n       </argument>\n\n       <argument>\n             <ret'
HTTP_RESPONSE_SETUPSERVICE_THREE = 'val />\n             <name>encrypt</name>\n             <relatedStateVariable>encrypt</relatedStateVariable>\n             <direction>in</direction>\n       </argument>\n\n       <argument>\n             <retval />\n             <name>channel</name>\n             <relatedStateVariable>channel</relatedStateVariable>\n             <direction>in</direction>\n       </argument>\n       \n      </argumentList>\n          \n    </action>\n    \n        <action>\n          <name>GetNetworkStatus</name>    \n          <argumentList>\n             <argument>\n               <retval />\n               <name>NetworkStatus</name>\n               <relatedStateVariable>NetworkStatus</relatedStateVariable>\n               <direction>out</direction>\n              </argument>\n          </argumentList>\n    </action>\n\n    <action>\n          <name>CloseSetup</name>    \n          <argumentList>\n          </argumentList>\n    </action>\n\t\n\t<action>\n          <name>StopPair</name>    \n          <argumentList>\n          </argumentList>\n    </action>\n    \n</actionList>\n\n  <serviceStateTable>\n  \n  <!-- connected, connecting, disconnected, time out error -->\n  <stateVariable sendEvents="yes">\n      <name>NetworkStatus</name>\n      <dataType>string</dataType>\n      <defaultValue>Disconnected</defaultValue>\n    </stateVariable>\n  <stateVariable sendEvents="yes">\t\n\t<name>PairingStatus</name>\n      <dataType>string</dataType>\n      <defaultValue>Connecting</defaultValue>\n    </stateVariable>\n'
HTTP_RESPONSE_SETUPSERVICE_FOUR = '    \n    <stateVariable sendEvents="yes">\n      <name>ApList</name>\n      <dataType>string</dataType>\n      <defaultValue></defaultValue>\n    </stateVariable>\n\t\n    <stateVariable sendEvents="yes">\n      <name>NetworkList</name>\n      <dataType>string</dataType>\n      <defaultValue></defaultValue>\n    </stateVariable>\n\t\n  </serviceStateTable>\n  \n  </scpd>\n'

# BOM = \xef\xbb\xbf
HTTP_REQUEST_TIMESYNCSERVICE_PREAMBLE = '/timesyncservice.xml'
HTTP_RESPONSE_TIMESYNCSERVICE_ONE = 'HTTP/1.1 200 OK\r\nCONTENT-LENGTH: 1718\r\nCONTENT-TYPE: text/xml\r\nDATE: Wed, 04 Dec 2019 20:57:23 GMT\r\nLAST-MODIFIED: Sat, 01 Jan 2000 00:00:31 GMT\r\nSERVER: Unspecified, UPnP/1.0, Unspecified\r\nX-User-Agent: redsonic\r\nCONNECTION: close\r\n\r\n'
HTTP_RESPONSE_TIMESYNCSERVICE_TWO = '<?xml version="1.0"?>\n<scpd xmlns="urn:Belkin:service-1-0">\n  <specVersion>\n    <major>1</major>\n    <minor>0</minor>\n  </specVersion>\n  \n  <actionList>  \n    <action>    \n      <name>TimeSync</name>    \n      <argumentList>\n         <argument>\n           <retval />\n\t\t   <!-- UTC value, long -->\n           <name>UTC</name>\n           <relatedStateVariable>UTC</relatedStateVariable>\n           <direction>in</direction>\n          </argument>\n         <argument>\n           <retval />\n           <name>TimeZone</name>\n           <relatedStateVariable>TimeZone</relatedStateVariable>\n           <direction>in</direction>\n          </argument>\n         <argument>\n           <retval />\n           <name>dst</name>\n           <relatedStateVariable>dst</relatedStateVariable>\n           <direction>in</direction>\n          </argument>\n\t\t  <argument>\n           <retval />\n           <name>DstSupported</name>\n           <relatedStateVariable>DstSupported</relatedStateVariable>\n           <direction>in</direction>\n          </argument>\n      </argumentList>      \n    </action>\n\t\n    <action>\n      <name>GetTime</name> \n    </action>\n    \n</actionList>\n\n  <serviceStateTable>\n    \n        <stateVariable sendEvents="no">\n        <!-- UTC seconds-->\n      <name>UTC</name>\n      <dataType>long</dataType>\n      <defaultValue>0</defaultValue>\n    </stateVariable>\n    \n    \n    '
HTTP_RESPONSE_TIMESYNCSERVICE_THREE = '<stateVariable sendEvents="no">\n      <name>TimeZone</name>\n      <dataType>int</dataType>\n      <defaultValue>0</defaultValue>\n    </stateVariable>\n\t\n\t<stateVariable sendEvents="no">\n      <name>dst</name>\n      <dataType>Boolean</dataType>\n      <defaultValue>0</defaultValue>\n    </stateVariable>\n    \n  </serviceStateTable>\n  \n  </scpd>'

HTTP_REQUEST_EVENTSERVICE_PREAMBLE = '/eventservice.xml'
HTTP_RESPONSE_EVENTSERVICE_ONE = 'HTTP/1.1 200 OK\r\nCONTENT-LENGTH: 20836\r\nCONTENT-TYPE: text/xml\r\nDATE: Wed, 04 Dec 2019 20:57:23 GMT\r\nLAST-MODIFIED: Sat, 01 Jan 2000 00:00:31 GMT\r\nSERVER: Unspecified, UPnP/1.0, Unspecified\r\nX-User-Agent: redsonic\r\nCONNECTION: close\r\n\r\n'
HTTP_RESPONSE_EVENTSERVICE_TWO = '<?xml version="1.0"?>\r\n<scpd xmlns="urn:Belkin:service-1-0">\r\n\r\n  <specVersion>\r\n    <major>1</major>\r\n    <minor>0</minor>\r\n  </specVersion>\r\n  \r\n  <actionList>\r\n  \r\n    <action>\r\n      <name>SetBinaryState</name>\r\n      <argumentList>\r\n         <argument>\r\n           <retval />\r\n           <name>BinaryState</name>\r\n           <relatedStateVariable>BinaryState</relatedStateVariable>\r\n           <direction>in</direction>\r\n          </argument>\r\n\t<argument>\r\n           <retval />\r\n           <name>Duration</name>\r\n           <relatedStateVariable>Duration</relatedStateVariable>\r\n           <direction>in</direction>\r\n          </argument>\r\n         <argument>\r\n           <retval />\r\n           <name>EndAction</name>\r\n           <relatedStateVariable>EndAction</relatedStateVariable>\r\n           <direction>in</direction>\r\n          </argument>\r\n         <argument>\r\n           <retval />\r\n           <name>UDN</name>\r\n           <relatedStateVariable>UDN</relatedStateVariable>\r\n           <direction>in</direction>\r\n          </argument>\r\n         <argument>\r\n           <retval />\r\n           <name>CountdownEndTime</name>\r\n           <relatedStateVariable>CountdownEndTime</relatedStateVariable>\r\n           <direction>out</direction>\r\n          </argument>\r\n         <argument>\r\n           <retval />\r\n           <name>deviceCurrentTime</name>\r\n           '
HTTP_RESPONSE_EVENTSERVICE_TWOA = '<relatedStateVariable>deviceCurrentTime</relatedStateVariable>\r\n           <direction>out</d'
HTTP_RESPONSE_EVENTSERVICE_THREE = 'irection>\r\n          </argument>\r\n      </argumentList>\r\n    </action>\r\n\r\n<action>\r\n  <name>UpdateInsightHomeSettings</name>\r\n  <argumentList>\r\n     <argument>\r\n       <retval />\r\n       <name>EnergyPerUnitCost</name>\r\n       <relatedStateVariable>EnergyPerUnitCost</relatedStateVariable>\r\n       <direction>in</direction>\r\n     </argument>\r\n     <argument>\r\n       <retval />\r\n       <name>Currency</name>\r\n       <relatedStateVariable>Currency</relatedStateVariable>\r\n       <direction>in</direction>\r\n     </argument>\r\n     <argument>\r\n       <retval />\r\n       <name>EnergyPerUnitCostVersion</name>\r\n       <relatedStateVariable>EnergyPerUnitCostVersion</relatedStateVariable>\r\n       <direction>in</direction>\r\n     </argument>\r\n  </argumentList>\r\n</action>\r\n\r\n<action>\r\n  <name>SetInsightHomeSettings</name>\r\n  <argumentList>\r\n     <argument>\r\n       <retval />\r\n       <name>EnergyPerUnitCost</name>\r\n       <relatedStateVariable>EnergyPerUnitCost</relatedStateVariable>\r\n       <direction>in</direction>\r\n     </argument>\r\n     <argument>\r\n       <retval />\r\n       <name>Currency</name>\r\n       <relatedStateVariable>Currency</relatedStateVariable>\r\n       <direction>in</direction>\r\n     </argument>\r\n  </argumentList>\r\n</action>\r\n\r\n<action>\r\n  <name>GetInsightHomeSettings</name>\r\n  <argumentList>\r\n     <argument>\r\n       <retval />\r\n       <na'
HTTP_RESPONSE_EVENTSERVICE_THREEA = 'me>HomeSettingsVersion</name>\r\n       <relatedStateVariable>HomeSettingsVersion</relatedStateVariable>\r\n'
HTTP_RESPONSE_EVENTSERVICE_FOUR = '       <direction>out</direction>\r\n     </argument>\r\n     <argument>\r\n       <retval />\r\n       <name>EnergyPerUnitCost</name>\r\n       <relatedStateVariable>EnergyPerUnitCost</relatedStateVariable>\r\n       <direction>out</direction>\r\n     </argument>\r\n     <argument>\r\n       <retval />\r\n       <name>Currency</name>\r\n       <relatedStateVariable>Currency</relatedStateVariable>\r\n       <direction>out</direction>\r\n     </argument>\r\n  </argumentList>\r\n</action>\r\n\r\n    <action>\r\n      <name>SetLogLevelOption</name>\r\n      <argumentList>\r\n         <argument>\r\n           <retval />\r\n           <name>Level</name>\r\n           <relatedStateVariable>Level</relatedStateVariable>\r\n           <direction>in</direction>\r\n          </argument>\r\n         <argument>\r\n           <retval />\r\n           <name>Option</name>\r\n           <relatedStateVariable>Option</relatedStateVariable>\r\n           <direction>in</direction>\r\n          </argument>\r\n      </argumentList>\r\n    </action>\r\n\r\n    <action>\r\n      <name>GetFriendlyName</name>\r\n  \t  <argumentList>\r\n      <argument>\r\n      <retval />\r\n      <name>FriendlyName</name>\r\n      <relatedStateVariable>FriendlyName</relatedStateVariable>\r\n      <direction>in</direction>\r\n       </argument>\r\n       </argumentList>\r\n    </action>\r\n    <action>\r\n      <name>ReSetup</name>\r\n      <argumentList>\r\n         <argument>'
HTTP_RESPONSE_EVENTSERVICE_FOURA = '\r\n           <retval />\r\n           <name>Reset</name>\r\n           <relatedStateVariable>Reset</relat'
HTTP_RESPONSE_EVENTSERVICE_FIVE = 'edStateVariable>\r\n           <direction>in</direction>\r\n          </argument>\r\n      </argumentList>\r\n    </action>\r\n\t<action>\r\n      <name>SetHomeId</name>\r\n      <argumentList>\r\n         <argument>\r\n           <retval />\r\n           <name>HomeId</name>\r\n           <relatedStateVariable>HomeId</relatedStateVariable>\r\n           <direction>in</direction>\r\n          </argument>\r\n      </argumentList>\r\n    </action>\r\n\t<action>\r\n      <name>GetHomeId</name>\r\n    </action>\r\n    <action>\r\n      <name>GetHomeInfo</name>\r\n      <argumentList>\r\n \t<retval />\r\n           <name>GetHomeInfo</name>\r\n           <relatedStateVariable>HomeInfo</relatedStateVariable>\r\n           <direction>out</direction>\r\n      </argumentList>\r\n    </action>\r\n\t<action>\r\n      <name>SetDeviceId</name>\r\n      <argumentList>\r\n         <argument>\r\n           <retval />\r\n           <name>SetDeviceId</name>\r\n           <relatedStateVariable>DeviceId</relatedStateVariable>\r\n           <direction>in</direction>\r\n          </argument>\r\n      </argumentList>\r\n    </action>\r\n    <action>\r\n      <name>GetDeviceId</name>\r\n    </action>\r\n\t <action>\r\n      <name>GetMacAddr</name>\r\n    </action>\r\n    <action>\r\n      <name>GetSerialNo</name>\r\n    </action>\r\n    <action>\r\n      <name>GetPluginUDN</name>\r\n    </action>\r\n    <action>\r\n      <name>GetSmartDevInfo</name>\r\n    </ac'
HTTP_RESPONSE_EVENTSERVICE_FIVEA = 'tion>\r\n    <action>\r\n      <name>ShareHWInfo</name>\r\n      <argumentList>\r\n         <argument>\r\n           <retv'
HTTP_RESPONSE_EVENTSERVICE_SIX = 'al />\r\n           <name>Mac</name>\r\n           <relatedStateVariable>Mac</relatedStateVariable>\r\n           <direction>in</direction>\r\n          </argument>\r\n         <argument>\r\n           <retval />\r\n           <name>Serial</name>\r\n           <relatedStateVariable>Serial</relatedStateVariable>\r\n           <direction>in</direction>\r\n          </argument>\r\n         <argument>\r\n           <retval />\r\n           <name>Udn</name>\r\n           <relatedStateVariable>Udn</relatedStateVariable>\r\n           <direction>in</direction>\r\n          </argument>\r\n         <argument>\r\n           <retval />\r\n           <name>RestoreState</name>\r\n           <relatedStateVariable>RestoreState</relatedStateVariable>\r\n           <direction>in</direction>\r\n          </argument>\r\n         <argument>\r\n           <retval />\r\n           <name>HomeId</name>\r\n           <relatedStateVariable>HomeId</relatedStateVariable>\r\n           <direction>in</direction>\r\n          </argument>\r\n         <argument>\r\n           <retval />\r\n           <name>PluginKey</name>\r\n           <relatedStateVariable>PluginKey</relatedStateVariable>\r\n           <direction>in</direction>\r\n          </argument>\r\n      </argumentList>\r\n    </action>\r\n    <action>\r\n      <name>ChangeFriendlyName</name>\r\n      <argumentList>\r\n         <argument>\r\n           <retval />\r\n           <name>FriendlyName</name>\r\n           '
HTTP_RESPONSE_EVENTSERVICE_SIXA = '<relatedStateVariable>FriendlyName</relatedStateVariable>\r\n           <directio'
HTTP_RESPONSE_EVENTSERVICE_SEVEN = 'n>in</direction>\r\n          </argument>\r\n      </argumentList>\r\n    </action>\r\n\t\r\n    <action>\r\n      <name>SetSmartDevInfo</name>\r\n      <argumentList>\r\n         <argument>\r\n           <retval />\r\n           <name>SmartDevURL</name>\r\n           <relatedStateVariable>SmartDevURL</relatedStateVariable>\r\n           <direction>in</direction>\r\n          </argument>\r\n      </argumentList>\r\n    </action>\r\n\t<action>\r\n      <name>GetRuleOverrideStatus</name>\r\n      <argumentList>\r\n         <argument>\r\n           <retval />\r\n           <name>RuleOverrideStatus</name>\r\n           <relatedStateVariable>RuleOverrideStatus</relatedStateVariable>\r\n           <direction>in</direction>\r\n          </argument>\r\n      </argumentList>\r\n    </action>\r\n\r\n\t<action>\r\n      <name>GetDeviceIcon</name>\r\n      <argumentList>\r\n         <argument>\r\n           <retval />\r\n           <name>DeviceIcon</name>\r\n           <relatedStateVariable>DeviceIcon</relatedStateVariable>\r\n           <direction>in</direction>\r\n          </argument>\r\n      </argumentList>\r\n    </action>\r\n\r\n\t<action>\r\n      <name>GetIconURL</name>\r\n      <argumentList>\r\n      <argument>\r\n      <retval />\r\n\t<name>URL</name>\r\n\t<relatedStateVariable>URL</relatedStateVariable>\r\n\t<direction>out</direction>\r\n\t</argument>\r\n      </argumentList>\r\n    </action>\r\n\t\r\n\t<action>\r\n      <name>GetLogFileURL'
HTTP_RESPONSE_EVENTSERVICE_SEVENA = '</name>\r\n      <argumentList>\r\n      <argument>\r\n      '
HTTP_RESPONSE_EVENTSERVICE_EIGHT = '<retval />\r\n\t<name>LOGURL</name>\r\n\t<relatedStateVariable>LOGURL</relatedStateVariable>\r\n\t<direction>out</direction>\r\n\t</argument>\r\n      </argumentList>\r\n    </action>\r\n\r\n\t<action>\r\n      <name>ChangeDeviceIcon</name>\r\n      <argumentList>\r\n         <argument>\r\n           <retval />\r\n           <name>PictureSize</name>\r\n           <relatedStateVariable>PictureSize</relatedStateVariable>\r\n           <direction>in</direction>\r\n          </argument>\r\n\t\t  <argument>\r\n           <retval />\r\n           <name>PictureHeight</name>\r\n           <relatedStateVariable>PictureWidth</relatedStateVariable>\r\n           <direction>in</direction>\r\n          </argument>\r\n\t\t  \r\n\t\t  <argument>\r\n           <retval />\r\n           <name>PictureColorDeep</name>\r\n           <relatedStateVariable>PictureColorDeep</relatedStateVariable>\r\n           <direction>in</direction>\r\n          </argument>\r\n      </argumentList>\r\n    </action>\r\n  \r\n    <action>\r\n    <name>GetBinaryState</name>\r\n    <argumentList>\r\n    <argument>\r\n    <retval />\r\n    <name>BinaryState</name>\r\n    <relatedStateVariable>BinaryState</relatedStateVariable>\r\n    <direction>out</direction>\r\n    </argument>\r\n    </argumentList>\r\n    </action>\r\n\t\r\n\t<action>\r\n      <name>SetMultiState</name>\r\n      <argumentList>\r\n         <argument>\r\n           <retval />\r\n           <name>state</name>\r\n'
HTTP_RESPONSE_EVENTSERVICE_EIGHTA = '<relatedStateVariable>StateList</relatedStateVariable>\r\n           <direction>in</direction>\r\n          </argument>\r\n\r\n\t\t  <argument>\r\n           <retval />\r\n '
HTTP_RESPONSE_EVENTSERVICE_NINE = '          <name>state</name>\r\n           <relatedStateVariable>StateList</relatedStateVariable>\r\n           <direction>in</direction>\r\n          </argument>\t\t  \r\n\t\r\n         <argument>\r\n           <retval />\r\n           <name>state</name>\r\n           <relatedStateVariable>StateList</relatedStateVariable>\r\n           <direction>in</direction>\r\n          </argument>\r\n\t\t  \r\n      </argumentList>\r\n    </action>\r\n\t\r\n\t<action>\r\n          <name>SetCrockpotState</name>\r\n          <argumentList>\r\n              <argument>\r\n                  <retval />\r\n                  <name>mode</name>\r\n                  <relatedStateVariable>mode</relatedStateVariable>\r\n                  <direction>in</direction>\r\n              </argument>\r\n              <argument>\r\n                  <retval />\r\n                  <name>time</name>\r\n                  <relatedStateVariable>timeVariable</relatedStateVariable>\r\n                  <direction>in</direction>\r\n              </argument>\r\n          </argumentList>\r\n      </action>\r\n\r\n    <action>\r\n          <name>GetCrockpotState</name>\r\n          <argumentList>\r\n              <argument>\r\n                  <retval />\r\n                  <name>mode</name>\r\n                  <relatedStateVariable>mode</relatedStateVariable>\r\n                  <direction>out</direction>\r\n              </argument>\r\n              <argument>\r\n                  '
HTTP_RESPONSE_EVENTSERVICE_NINEA = '<retval />\r\n                  <name>time</name>\r\n                  <relatedStateVaria'
HTTP_RESPONSE_EVENTSERVICE_TEN = 'ble>timeVariable</relatedStateVariable>\r\n                  <direction>out</direction>\r\n              </argument>\r\n          </argumentList>\r\n      </action>\r\n\t\r\n    <action>\r\n      <name>GetWatchdogFile</name>\r\n      <argumentList>\r\n        <argument>\r\n          <retval />\r\n            <name>WDFile</name>\r\n            <relatedStateVariable>WDFile</relatedStateVariable>\r\n            <direction>out</direction>\r\n        </argument>\r\n      </argumentList>\r\n    </action>\r\n\r\n    <action>\r\n      <name>GetSignalStrength</name>\r\n      <argumentList>\r\n        <argument>\r\n          <retval />\r\n            <name>SignalStrength</name>\r\n            <relatedStateVariable>SignalStrength</relatedStateVariable>\r\n            <direction>in</direction>\r\n        </argument>\r\n      </argumentList>\r\n    </action>\r\n\r\n    <action>\r\n      <name>SetServerEnvironment</name>\r\n      <argumentList>\r\n        <argument>\r\n          <retval />\r\n            <name>ServerEnvironment</name>\r\n            <relatedStateVariable>ServerEnvironment</relatedStateVariable>\r\n            <direction>in</direction>\r\n        </argument>\r\n        <argument>\r\n          <retval />\r\n            <name>TurnServerEnvironment</name>\r\n            <relatedStateVariable>TurnServerEnvironment</relatedStateVariable>\r\n            <direction>in</direction>\r\n        </argument>\r\n\t<argument>\r\n          <retval />'
HTTP_RESPONSE_EVENTSERVICE_TENA = '\r\n            <name>ServerEnvironmentType</name>\r\n            <relatedStateVariable>ServerEnvi'
HTTP_RESPONSE_EVENTSERVICE_ELEVEN = 'ronmentType</relatedStateVariable>\r\n            <direction>in</direction>\r\n        </argument>\r\n      </argumentList>\r\n    </action>\r\n\r\n    <action>\r\n      <name>GetServerEnvironment</name>\r\n      <argumentList>\r\n        <argument>\r\n          <retval />\r\n            <name>ServerEnvironment</name>\r\n            <relatedStateVariable>ServerEnvironment</relatedStateVariable>\r\n            <direction>out</direction>\r\n        </argument>\r\n        <argument>\r\n          <retval />\r\n            <name>TurnServerEnvironment</name>\r\n            <relatedStateVariable>TurnServerEnvironment</relatedStateVariable>\r\n            <direction>out</direction>\r\n        </argument>\r\n        <argument>\r\n          <retval />\r\n            <name>ServerEnvironmentType</name>\r\n            <relatedStateVariable>ServerEnvironmentType</relatedStateVariable>\r\n            <direction>out</direction>\r\n        </argument>\r\n      </argumentList>\r\n    </action>\r\n\r\n    <action>\r\n\t<name>GetIconVersion</name>\r\n\t<argumentList>\r\n\t    <argument>\r\n\t\t<retval />\r\n\t\t<name>IconVersion</name>\r\n\t\t<relatedStateVariable>IconVersion</relatedStateVariable>\r\n\t\t<direction>out</direction>\r\n\t    </argument>\r\n\t</argumentList>\r\n    </action>\r\n    <action>\r\n    <name>GetSimulatedRuleData</name>\r\n    <argumentList>\r\n    <retval />\r\n    <name>GetSimulatedRuleData</name>\r\n    <relatedStateVariable>'
HTTP_RESPONSE_EVENTSERVICE_ELEVENA = 'RuleData</relatedStateVariable>\r\n    <direction>out</direction>\r\n    '
HTTP_RESPONSE_EVENTSERVICE_TWELVE = '</argumentList>\r\n    </action>\r\n    <action>\r\n    <name>NotifyManualToggle</name>\r\n    <argumentList>\r\n    <retval />\r\n    <name>NotifyManualToggle</name>\r\n    <relatedStateVariable>ManualToggle</relatedStateVariable>\r\n    <direction>out</direction>\r\n    </argumentList>\r\n    </action>\r\n     <action>\r\n      <name>ControlCloudUpload</name>\r\n      <argumentList>\r\n        <argument>\r\n          <name>EnableUpload</name>\r\n          <direction>in</direction>\r\n          <relatedStateVariable>EnableUpload</relatedStateVariable>\r\n        </argument>\r\n      </argumentList>\r\n    </action>\r\n</actionList>\r\n\r\n  <serviceStateTable>\r\n \r\n    <stateVariable sendEvents="yes">\r\n      <name>HomeSettingsVersion</name>\r\n      <dataType>String</dataType>\r\n      <defaultValue>0</defaultValue>\r\n    </stateVariable>\r\n    <stateVariable sendEvents="yes">\r\n      <name>EnergyPerUnitCost</name>\r\n      <dataType>String</dataType>\r\n      <defaultValue>0</defaultValue>\r\n    </stateVariable>\r\n    <stateVariable sendEvents="yes">\r\n      <name>Currency</name>\r\n      <dataType>String</dataType>\r\n      <defaultValue>0</defaultValue>\r\n    </stateVariable>\r\n \r\n    <stateVariable sendEvents="yes">\r\n      <name>BinaryState</name>\r\n      <dataType>string</dataType>\r\n      <defaultValue>0</defaultValue>\r\n    </stateVariable>\r\n\t\r\n     <stateVariable sendEvents="no">\r\n      <name>Duration'
HTTP_RESPONSE_EVENTSERVICE_TWELVEA = '</name>\r\n      <dataType>string</dataType>\r\n      <defaultValue>0</defaultValue>\r\n    </stateVariable>\r\n\r\n    <stateVariable sendEvents'
HTTP_RESPONSE_EVENTSERVICE_THIRTEEN = '="no">\r\n      <name>EndAction</name>\r\n      <dataType>string</dataType>\r\n      <defaultValue>0</defaultValue>\r\n    </stateVariable>\r\n\r\n    <stateVariable sendEvents="no">\r\n      <name>UDN</name>\r\n      <dataType>string</dataType>\r\n      <defaultValue>0</defaultValue>\r\n    </stateVariable>\r\n\r\n\t<stateVariable sendEvents="yes">\r\n      <name>mode</name>\r\n      <dataType>string</dataType>\r\n      <defaultValue>0</defaultValue>\r\n    </stateVariable>\r\n    \r\n    <stateVariable sendEvents="yes">\r\n      <name>time</name>\r\n      <dataType>string</dataType>\r\n      <defaultValue>0</defaultValue>\r\n    </stateVariable>\r\n\t\r\n    <stateVariable sendEvents="yes">\r\n      <name>level</name>\r\n      <dataType>string</dataType>\r\n      <defaultValue>0</defaultValue>\r\n    </stateVariable>\r\n\r\n    <stateVariable sendEvents="yes">\r\n      <name>option</name>\r\n      <dataType>string</dataType>\r\n      <defaultValue>0</defaultValue>\r\n    </stateVariable>\r\n\r\n\t<stateVariable sendEvents="yes">\r\n      <name>Reset</name>\r\n      <dataType>string</dataType>\r\n      <defaultValue>0</defaultValue>\r\n\r\n    </stateVariable>\r\n\t<stateVariable sendEvents="yes">\r\n      <name>FriendlyName</name>\r\n      <dataType>string</dataType>\r\n      <defaultValue>0</defaultValue>\r\n    </stateVariable>\r\n\t\r\n\t<stateVariable sendEvents="yes">\r\n      <name>HomeId</name>\r\n      <dataType>string</dataType>'
HTTP_RESPONSE_EVENTSERVICE_THIRTEENA = '\r\n      <defaultValue>0</defaultValue>\r\n    </stateVariable>\r\n\t<stateVariable sendEvents="yes">\r\n      '
HTTP_RESPONSE_EVENTSERVICE_FOURTEEN = '<name>DeviceId</name>\r\n      <dataType>string</dataType>\r\n      <defaultValue>0</defaultValue>\r\n    </stateVariable>\r\n\t<stateVariable sendEvents="yes">\r\n      <name>SmartDevInfo</name>\r\n      <dataType>string</dataType>\r\n      <defaultValue>0</defaultValue>\r\n    </stateVariable>\r\n\t<stateVariable sendEvents="yes">\r\n      <name>MacAddr</name>\r\n      <dataType>string</dataType>\r\n      <defaultValue>0</defaultValue>\r\n    </stateVariable>\r\n\t<stateVariable sendEvents="yes">\r\n      <name>SerialNo</name>\r\n      <dataType>string</dataType>\r\n      <defaultValue>0</defaultValue>\r\n    </stateVariable>\r\n\r\n\t<stateVariable sendEvents="yes">\r\n      <name>PluginUDN</name>\r\n      <dataType>string</dataType>\r\n      <defaultValue>0</defaultValue>\r\n    </stateVariable>\r\n\t<stateVariable sendEvents="yes">\r\n      <name>DeviceIcon</name>\r\n      <dataType>string</dataType>\r\n      <defaultValue>0</defaultValue>\r\n    </stateVariable>\r\n  \r\n    <stateVariable sendEvents="No">\r\n      <name>StateList</name>\r\n      <dataType>list</dataType>\r\n      <defaultValue>0</defaultValue>\r\n    </stateVariable>\r\n  <stateVariable sendEvents="yes">\r\n      <name>URL</name>\r\n\t  <dataType>string</dataType>\r\n\t  <defaultValue>0</defaultValue>\r\n  </stateVariable>\r\n\t\t\t\t\t\t\r\n\t<stateVariable sendEvents="yes">\r\n      <name>RuleOverrideStatus</name>\r\n\t  <dataType>string</dataType>\r\n\t  <default'
HTTP_RESPONSE_EVENTSERVICE_FOURTEENA = 'Value>0</defaultValue>\r\n  </stateVariable>\r\n\t\t\t\t\t\t\r\n    '
HTTP_RESPONSE_EVENTSERVICE_FIFTEEN = '<stateVariable sendEvents="yes">\r\n      <name>WDFile</name>\r\n      <dataType>string</dataType>\r\n      <defaultValue>0</defaultValue>\r\n    </stateVariable>\r\n\r\n    <stateVariable sendEvents="yes">\r\n      <name>SignalStrength</name>\r\n      <dataType>string</dataType>\r\n      <defaultValue>0</defaultValue>\r\n    </stateVariable>\r\n\r\n    <stateVariable sendEvents="yes">\r\n      <name>ServerEnvironment</name>\r\n      <dataType>string</dataType>\r\n      <defaultValue>0</defaultValue>\r\n    </stateVariable>\r\n\r\n    <stateVariable sendEvents="yes">\r\n      <name>TurnServerEnvironment</name>\r\n      <dataType>string</dataType>\r\n      <defaultValue>0</defaultValue>\r\n    </stateVariable>\r\n\r\n  <stateVariable sendEvents="yes">\r\n      <name>ServerEnvironmentType</name>\r\n      <dataType>string</dataType>\r\n      <defaultValue>0</defaultValue>\r\n    </stateVariable>\r\n\r\n    <stateVariable sendEvents="yes">\r\n      <name>IconVersion</name>\r\n      <dataType>string</dataType>\r\n      <defaultValue>0</defaultValue>\r\n    </stateVariable>\r\n\r\n    <stateVariable sendEvents="yes">\r\n      <name>RuleData</name>\r\n      <dataType>string</dataType>\r\n      <defaultValue>0</defaultValue>\r\n    </stateVariable>\r\n    <stateVariable sendEvents="yes">\r\n      <name>ManualToggle</name>\r\n      <dataType>string</dataType>\r\n      <defaultValue>0</defaultValue>\r\n    </stateVariable>\r\n     <stateVariable send'
HTTP_RESPONSE_EVENTSERVICE_FIFTEENA = 'Events="yes">\r\n      <name>EnableUpload</name>\r\n      '
HTTP_RESPONSE_EVENTSERVICE_SIXTEEN = '<dataType>string</dataType>\r\n      <defaultValue>0</defaultValue>\r\n    </stateVariable>\r\n\r\n    <stateVariable sendEvents="yes">\r\n      <name>CountdownEndTime</name>\r\n      <dataType>string</dataType>\r\n      <defaultValue>0</defaultValue>\r\n    </stateVariable>\r\n\r\n    <stateVariable sendEvents="yes">\r\n      <name>deviceCurrentTime</name>\r\n      <dataType>string</dataType>\r\n      <defaultValue>0</defaultValue>\r\n    </stateVariable>\r\n\r\n\r\n  </serviceStateTable>\r\n  \r\n  </scpd>\r\n'

HTTP_REQUEST_FIRMWAREUPDATE_PREAMBLE = '/firmwareupdate.xml'
HTTP_RESPONSE_FIRMWAREUPDATE_ONE = 'HTTP/1.1 200 OK\r\nCONTENT-LENGTH: 1826\r\nCONTENT-TYPE: text/xml\r\nDATE: Wed, 04 Dec 2019 20:57:23 GMT\r\nLAST-MODIFIED: Sat, 01 Jan 2000 00:00:31 GMT\r\nSERVER: Unspecified, UPnP/1.0, Unspecified\r\nX-User-Agent: redsonic\r\nCONNECTION: close\r\n\r\n'
HTTP_RESPONSE_FIRMWAREUPDATE_TWO = '<?xml version="1.0" ?> \n<scpd xmlns="urn:Belkin:service-1-0">\n<specVersion>\n<major>1</major> \n<minor>0</minor> \n</specVersion>\n<actionList>\n<action>\n<name>UpdateFirmware</name> \n<argumentList>\n<argument>\n<retval /> \n<name>NewFirmwareVersion</name> \n<relatedStateVariable>NewFirmwareVersion</relatedStateVariable> \n<direction>in</direction> \n</argument>\n<argument>\n<retval /> \n<name>ReleaseDate</name> \n<relatedStateVariable>ReleaseDate</relatedStateVariable> \n<direction>in</direction> \n</argument>\n<argument>\n<retval /> \n<name>URL</name> \n<relatedStateVariable>URL</relatedStateVariable> \n<direction>in</direction> \n</argument>\n<argument>\n<retval /> \n<name>Signature</name> \n<relatedStateVariable>Signature</relatedStateVariable> \n<direction>in</direction> \n</argument>\n<argument>\n<retval /> \n<name>DownloadStartTime</name>\n<relatedStateVariable>DownloadStartTime</relatedStateVariable>\n<direction>in</direction>\n</argument>\n<argument>\n<retval /> \n<name>WithUnsignedImage</name>\n<relatedStateVariable>WithUnsignedImage</relatedStateVariable>\n<direction>in</direction>\n</argument>\n</argumentList>\n</action>\n<action>\n<name>GetFirmwareVersion</name>\n<retval />\n<argumentList>\n<argument>\n<name>FirmwareVersion</name> \n<relatedStateVariable>FirmwareVersion</relatedStateVariable> \n'
HTTP_RESPONSE_FIRMWAREUPDATE_THREE = '<direction>out</direction> \n</argument>\n</argumentList>\n</action>\n</actionList>\n<serviceStateTable>\n<stateVariable sendEvents="yes">\n<name>FirmwareVersion</name>\n<dataType>string</dataType>\n<defaultValue>0</defaultValue>\n</stateVariable>\n<stateVariable sendEvents="yes">\n<name>FirmwareUpdateStatus</name>\n<dataType>string</dataType>\n<defaultValue>0</defaultValue>\n</stateVariable>\n<stateVariable sendEvents="no">\n<name>WithUnsignedImage</name>\n<dataType>string</dataType>\n<defaultValue>0</defaultValue>\n</stateVariable>\n</serviceStateTable>\n</scpd>\n'

# BOM = \xef\xbb\xbf
HTTP_REQUEST_RULESSERVICE_PREAMBLE = '/rulesservice.xml'
HTTP_RESPONSE_RULESSERVICE_ONE = 'HTTP/1.1 200 OK\r\nCONTENT-LENGTH: 9668\r\nCONTENT-TYPE: text/xml\r\nDATE: Wed, 04 Dec 2019 20:57:23 GMT\r\nLAST-MODIFIED: Sat, 01 Jan 2000 00:00:31 GMT\r\nSERVER: Unspecified, UPnP/1.0, Unspecified\r\nX-User-Agent: redsonic\r\nCONNECTION: close\r\n\r\n'
HTTP_RESPONSE_RULESSERVICE_TWO = '<?xml version="1.0"?>\n<scpd xmlns="urn:Belkin:service-1-0">\n\n  <specVersion>\n    <major>1</major>\n    <minor>0</minor>\n  </specVersion>\n  \n<actionList>\n    <action>\n          <name>UpdateWeeklyCalendar</name>   \n\t\t  <argumentList>\n\t        <argument>\n                <retval />\n<!-- entire day\'s timers list: \nNumberOfTimers|time,action,[deviceUDN;deviceUDN;...]|time,action,[deviceUDN;deviceUDN...]|time,action \n -->\t\t\t\t\n<!--time, seconds from 00:00 am within 24 hours. action: 0x00 (OFF/NO detection), 0x01: (ON/Detection)--> \n<!--PLEASE note that, for simpler timer stored on socket, deviceUDN is NULL-->\n                <name>Mon</name>\n                <relatedStateVariable>Mon</relatedStateVariable>\n                <direction>in</direction>\n            </argument>\n\t        <argument>\n                <retval />\n                <name>Tues</name>\n                <relatedStateVariable>Tues</relatedStateVariable>\n                <direction>in</direction>\n            </argument>\n\t        <argument>\n                <retval />\n                <name>Wed</name>\n                <relatedStateVariable>Wed</relatedStateVariable>\n                <direction>in</direction>\n            </argument>\n\t        <argument>\n                <retval />\n                <name>Thurs</name>\n                <relatedStateVariable>Thurs</relatedStateVariable>\n                <direction>in</direction>\n            </argument>\n\t        <argument>\n                <retval />'
HTTP_RESPONSE_RULESSERVICE_THREE = '\n                <name>Fri</name>\n                <relatedStateVariable>Fri</relatedStateVariable>\n                <direction>in</direction>\n            </argument>\n\t        <argument>\n                <retval />\n                <name>Sat</name>\n                <relatedStateVariable>Sat</relatedStateVariable>\n                <direction>in</direction>\n            </argument>\n\t        <argument>\n                <retval />\n                <name>Sun</name>\n                <relatedStateVariable>Sun</relatedStateVariable>\n                <direction>in</direction>\n            </argument>\n\n          </argumentList>\n    </action>\n\n    <action>\n          <name>EditWeeklycalendar</name>    \n          <argumentList>\n           <argument>\n                <retval />\n<!-- 0x00: disbale; 0x01: enable; 0x02: remove-->\n<!--- Disable will disable entire week schedule, now only remove will be applied \nsince app will manage all rules and store on device on other way \n-->\n                <name>action</name>\n                <relatedStateVariable>action</relatedStateVariable>\n                <direction>in</direction>\n          </argument>\n          </argumentList>\n    </action>\n\n    \n    <!--Should create detailed low level protocol-->\n    <action>\n          <name>GetRulesDBPath</name>    \n          <argumentList>\n\t  <argument>\n           <retval />\n           <name>RulesDBPath</name>\n           <relatedStateVariable>RulesDBPath</relatedStateVariable>\n         '
HTTP_RESPONSE_RULESSERVICE_FOUR = '  <direction>out</direction>\n          </argument>\n          </argumentList>\n    </action>\n\n<action>\n <name>SetRulesDBVersion</name>    \n          <argumentList>\n\t  <argument>\n           <retval />\n           <name>RulesDBVersion</name>\n           <relatedStateVariable>RulesDBVersion</relatedStateVariable>\n           <direction>in</direction>\n          </argument>\n          </argumentList>\n    </action>\n\n<action>\n\t  <name>GetRulesDBVersion</name>    \n\t  <argumentList>\n\t  <argument>\n           <retval />\n           <name>RulesDBVersion</name>\n           <relatedStateVariable>RulesDBVersion</relatedStateVariable>\n           <direction>out</direction>\n          </argument>\n          </argumentList>\n    </action>\n<action>\n  <name>SetRuleID</name>\n  <argumentList>\n     <argument>\n       <retval />\n       <name>RuleID</name>\n       <relatedStateVariable>RuleID</relatedStateVariable>\n       <direction>in</direction>\n      </argument>\n     <argument>\n       <retval />\n       <name>RuleMsg</name>\n       <relatedStateVariable>RuleMsg</relatedStateVariable>\n       <direction>in</direction>\n      </argument>\n     <argument>\n       <retval />\n       <name>RuleFreq</name>\n       <relatedStateVariable>RuleFreq</relatedStateVariable>\n       <direction>in</direction>\n      </argument>\n  </argumentList>\n</action>\n\n<action>\n  <name>DeleteRuleID</name>\n  <argumentList>\n     <argument>\n       <retval />\n       <name>RuleID</name>\n       <relatedStateVariabl'
HTTP_RESPONSE_RULESSERVICE_FIVE = 'e>RuleID</relatedStateVariable>\n       <direction>in</direction>\n      </argument>\n  </argumentList>\n</action>\n\t\n<action>\n  <name>SimulatedRuleData</name>\n  <argumentList>\n     <argument>\n       <retval />\n       <name>DeviceList</name>\n       <relatedStateVariable>DeviceList</relatedStateVariable>\n       <direction>in</direction>\n      </argument>\n     <argument>\n       <retval />\n       <name>DeviceCount</name>\n       <relatedStateVariable>DeviceCount</relatedStateVariable>\n       <direction>in</direction>\n      </argument>\n  </argumentList>\n</action>\n\n<!-- ** BEGIN ** Optimize Rules API: XML Schema -->\n<action>\n  <name>FetchRules</name>\n  <argumentList>\n     <argument>\n       <retval></retval>\n       <name>ruleDbPath</name>\n       <relatedStateVariable>ruleDbPath</relatedStateVariable>\n       <direction>out</direction>\n     </argument>\n     <argument>\n       <retval></retval>\n       <name>ruleDbVersion</name>\n       <relatedStateVariable>ruleDbVersion</relatedStateVariable>\n       <direction>out</direction>\n     </argument>\n     <argument>\n       <retval></retval>\n       <name>errorInfo</name>\n       <relatedStateVariable>errorInfo</relatedStateVariable>\n       <direction>out</direction>\n     </argument>\n  </argumentList>\t \n</action>\n\n<action>\n  <name>StoreRules</name>\n  <argumentList>\n     <argument>\n\t   <retval></retval>\n       <name>ruleDbVersion</name>\n       <relatedStateVariable>ruleDbVersion</relatedStateVariable>\n       <dire'
HTTP_RESPONSE_RULESSERVICE_SIX = 'ction>in</direction>\n     </argument>\n     <argument>\n\t   <retval></retval>\n       <name>processDb</name>\n       <relatedStateVariable>processDb</relatedStateVariable>\n       <direction>in</direction>\n     </argument>\n     <argument>\n\t   <retval></retval>\n       <name>ruleDbBody</name>\n       <relatedStateVariable>ruleDbBody</relatedStateVariable>\n       <direction>in</direction>\n     </argument>\n     <argument>\n\t   <retval></retval>\n       <name>errorInfo</name>\n       <relatedStateVariable>errorInfo</relatedStateVariable>\n       <direction>out</direction>\n     </argument>\n  </argumentList>\t \n</action>\n<!-- ** END ** Optimize Rules API: XML Schema -->\n</actionList>\n\n  <serviceStateTable>\n  \n  <!-- connected, connecting, disconnected, time out error -->\n  <stateVariable sendEvents="no">\n      <name>RulesDBPath</name>\n      <dataType>string</dataType>\n      <defaultValue>/rules.db</defaultValue>\n    </stateVariable>\n\t\n\t  <stateVariable sendEvents="no">\n      <name>RulesDBVersion</name>\n      <dataType>string</dataType>\n      <defaultValue></defaultValue>\n    </stateVariable>\n\t\n  <stateVariable sendEvents="no">\t\n\t<name>Mon</name>\n      <dataType>string</dataType>\n      <defaultValue></defaultValue>\n    </stateVariable>\n    \n  <stateVariable sendEvents="no">\t\n\t<name>Tues</name>\n      <dataType>string</dataType>\n      <defaultValue></defaultValue>\n    </stateVariable>\n    \n    <stateVariable sendEvents="no">\n      <name>Wed</name>\n      <da'
HTTP_RESPONSE_RULESSERVICE_SEVEN = 'taType>string</dataType>\n      <defaultValue></defaultValue>\n    </stateVariable>\n\t\n\t<stateVariable sendEvents="no">\n      <name>Thurs</name>\n      <dataType>Thurs</dataType>\n      <defaultValue></defaultValue>\n    </stateVariable>\n\t\n\t<stateVariable sendEvents="no">\n      <name>Fri</name>\n      <dataType>Fri</dataType>\n      <defaultValue></defaultValue>\n    </stateVariable>\t\n\n\t<stateVariable sendEvents="no">\n      <name>Sat</name>\n      <dataType>Sat</dataType>\n      <defaultValue></defaultValue>\n    </stateVariable>\n\t\n\t<stateVariable sendEvents="no">\n      <name>Sun</name>\n      <dataType>Sun</dataType>\n      <defaultValue></defaultValue>\n    </stateVariable>\n    <stateVariable sendEvents="yes">\n      <name>RuleID</name>\n      <dataType>string</dataType>\n      <defaultValue>0</defaultValue>\n    </stateVariable>\n    <stateVariable sendEvents="yes">\n      <name>RuleMsg</name>\n      <dataType>string</dataType>\n      <defaultValue>0</defaultValue>\n    </stateVariable>\n    <stateVariable sendEvents="yes">\n      <name>RuleFreq</name>\n      <dataType>string</dataType>\n      <defaultValue>0</defaultValue>\n    </stateVariable>\n    <stateVariable sendEvents="yes">\n      <name>DeviceList</name>\n      <dataType>string</dataType>\n      <defaultValue>0</defaultValue>\n    </stateVariable>\n    <stateVariable sendEvents="yes">\n      <name>DeviceCount</name>\n      <dataType>string</dataType>\n      <defaultValue>0</defaultValue>\n    </stateVariable>\n\t\n\t'
HTTP_RESPONSE_RULESSERVICE_EIGHT = '<!-- ** BEGIN ** Optimize Rules API -->\n    <stateVariable sendEvents="no">\n      <name>ruleDbPath</name>\n      <dataType>string</dataType>\n      <defaultValue>0</defaultValue>\n    </stateVariable>\n\n    <stateVariable sendEvents="no">\n      <name>ruleDbVersion</name>\n      <dataType>string</dataType>\n      <defaultValue>0</defaultValue>\n    </stateVariable>\n    <stateVariable sendEvents="no">\n      <name>processDb</name>\n      <dataType>string</dataType>\n      <defaultValue>0</defaultValue>\n    </stateVariable>\n    <stateVariable sendEvents="no">\n      <name>ruleDbBody</name>\n      <dataType>string</dataType>\n      <defaultValue>0</defaultValue>\n    </stateVariable>\n    <stateVariable sendEvents="no">\n      <name>errorInfo</name>\n      <dataType>string</dataType>\n      <defaultValue>0</defaultValue>\n    </stateVariable>\n\t<!-- ** END ** Optimize Rules API -->\n\t\n\t</serviceStateTable>\n  \n  </scpd>\n'

# BOM = \xef\xbb\xbf
HTTP_REQUEST_METAINFOSERVICE_PREAMBLE = '/metainfoservice.xml'
HTTP_RESPONSE_METAINFOSERVICE_ONE = 'HTTP/1.1 200 OK\r\nCONTENT-LENGTH: 1132\r\nCONTENT-TYPE: text/xml\r\nDATE: Wed, 04 Dec 2019 20:57:23 GMT\r\nLAST-MODIFIED: Sat, 01 Jan 2000 00:00:31 GMT\r\nSERVER: Unspecified, UPnP/1.0, Unspecified\r\nX-User-Agent: redsonic\r\nCONNECTION: close\r\n\r\n'
HTTP_RESPONSE_METAINFOSERVICE_TWO = '<?xml version="1.0"?>\n<scpd xmlns="urn:Belkin:service-1-0">\n\n  <specVersion>\n    <major>1</major>\n    <minor>0</minor>\n  </specVersion>\n  \n  <actionList>\n  \n    <action>\n      <name>GetMetaInfo</name>\n      <argumentList>\n      <argument>\n \t<retval />\n           <name>MetaInfo</name>\n           <relatedStateVariable>MetaInfo</relatedStateVariable>\n           <direction>out</direction>\n      </argument>\n      </argumentList>\n    </action>\n    <action>\n      <name>GetExtMetaInfo</name>\n      <argumentList>\n      <argument>\n \t<retval />\n           <name>ExtMetaInfo</name>\n           <relatedStateVariable>ExtMetaInfo</relatedStateVariable>\n           <direction>out</direction>\n      </argument>\n      </argumentList>\n    </action>\n</actionList>\n\n  <serviceStateTable>\n  \n    <stateVariable sendEvents="no">\n      <name>ExtMetaInfo</name>\n      <dataType>String</dataType>\n      <defaultValue>0</defaultValue>\n    </stateVariable>\n    <stateVariable sendEvents="yes">\n      <name>MetaInfo</name>\n      <dataType>string</dataType>\n      <defaultValue>0</defaultValue>\n    </stateVariable>\n\n  </serviceStateTable>\n  \n  </scpd>\n'

HTTP_REQUEST_REMOTEACCESS_PREAMBLE = '/remoteaccess.xml'
HTTP_RESPONSE_REMOTEACCESS_ONE = 'HTTP/1.1 200 OK\r\nCONTENT-LENGTH: 3974\r\nCONTENT-TYPE: text/xml\r\nDATE: Wed, 04 Dec 2019 20:57:23 GMT\r\nLAST-MODIFIED: Sat, 01 Jan 2000 00:00:31 GMT\r\nSERVER: Unspecified, UPnP/1.0, Unspecified\r\nX-User-Agent: redsonic\r\nCONNECTION: close\r\n\r\n'
HTTP_RESPONSE_REMOTEACCESS_TWO = '<?xml version="1.0"?>\n<scpd xmlns="urn:Belkin:service-1-0">\n  <specVersion>\n    <major>1</major>\n    <minor>0</minor>\n  </specVersion>\n  \n  <actionList>  \n    <action>\n      <name>RemoteAccess</name>\n      <argumentList>\n         <argument>\n           <retval />\n           <name>DeviceId</name>\n           <relatedStateVariable>DeviceId</relatedStateVariable>\n           <direction>in</direction>\n          </argument>\n\t\t  <argument>\n           <retval />\n           <name>dst</name>\n           <relatedStateVariable>dst</relatedStateVariable>\n           <direction>in</direction>\n          </argument>\n\t  <argument>\n           <retval />\n           <name>HomeId</name>\n           <relatedStateVariable>HomeId</relatedStateVariable>\n           <direction>in</direction>\n          </argument>\n\t  <argument>\n           <retval />\n           <name>DeviceName</name>\n           <relatedStateVariable>DeviceName</relatedStateVariable>\n           <direction>in</direction>\n          </argument>\n\t  <argument>\n           <retval />\n           <name>MacAddr</name>\n           <relatedStateVariable>MacAddr</relatedStateVariable>\n           <direction>in</direction>\n          </argument>\n\t<argument>\n\t\t<retval />\n\t\t<name>pluginprivateKey</name>\n\t\t<relatedStateVariable>pluginprivateKey</relatedStateVariable>\n\t\t<direction>in</direction>\n\t</argument>\n\t<argument>\n\t\t<retval />\n\t\t<name>smartprivateKey</name>\n\t\t<relatedStateVariable>smartprivateKey</relatedStateVariable'
HTTP_RESPONSE_REMOTEACCESS_THREE = '>\n\t\t<direction>in</direction>\n\t</argument>\n\t<argument>\n\t<retval />\n\t<name>smartUniqueId</name>\n\t<relatedStateVariable>smartUniqueId</relatedStateVariable>\n\t<direction>in</direction>\n\t</argument>\t \t  \n\t<argument>\n\t<retval />\n\t<name>numSmartDev</name>\n\t<relatedStateVariable>numSmartDev</relatedStateVariable>\n\t<direction>in</direction>\n\t</argument>\t \t  \n\t<argument>\n\t<retval />\n\t<name>ArpMac</name>\n\t<relatedStateVariable>ArpMac</relatedStateVariable>\n\t<direction>out</direction>\n\t</argument>\t \t  \n </argumentList>\n </action>\n\t\n    \n</actionList>\n\n  <serviceStateTable>\n    \n        <stateVariable sendEvents="yes">\n        <!-- DEV ID -->\n      <name>homeId</name>\n      <dataType>string</dataType>\n      <defaultValue>0</defaultValue>\n    </stateVariable>\n\t<stateVariable sendEvents="yes">\n      <name>"pluginprivateKey"</name>\n      <dataType>string</dataType>\n      <defaultValue>0</defaultValue>\n    </stateVariable>\n    <stateVariable sendEvents="yes">\n      <name>"smartprivateKey"</name>\n      <dataType>string</dataType>\n      <defaultValue>0</defaultValue>\n    </stateVariable>\n\t<stateVariable sendEvents="yes">\n      <name>statusCode</name>\n      <dataType>string</dataType>\n      <defaultValue>0</defaultValue>\n    </stateVariable>\n\t<stateVariable sendEvents="yes">\n      <name>resultCode</name>\n      <dataType>string</dataType>\n      <defaultValue>0</defaultValue>\n    </stateVariable>\n\t<stateVariable sendEvents="yes">\n      <name>description</na'
HTTP_RESPONSE_REMOTEACCESS_FOUR = 'me>\n      <dataType>string</dataType>\n      <defaultValue>0</defaultValue>\n    </stateVariable>\n\t<stateVariable sendEvents="yes">\n      <name>smartUniqueId</name>\n      <dataType>string</dataType>\n      <defaultValue>0</defaultValue>\n    </stateVariable>\n\t<stateVariable sendEvents="yes">\n      <name>smartDeviceDescription</name>\n      <dataType>string</dataType>\n      <defaultValue>0</defaultValue>\n    </stateVariable>\n    <stateVariable sendEvents="yes">\n\t\t<name>pluginprivateKey</name>\n\t\t<dataType>string</dataType>\n\t\t<defaultValue>0</defaultValue>\n\t</stateVariable>\n\t<stateVariable sendEvents="yes">\n\t\t<name>smartprivateKey</name>\n\t\t<dataType>string</dataType>\n\t\t<defaultValue>0</defaultValue>\n\t</stateVariable>\n\t<stateVariable sendEvents="yes">\n\t\t<name>numSmartDev</name>\n\t\t<dataType>string</dataType>\n\t\t<defaultValue>0</defaultValue>\n\t</stateVariable>\n     <stateVariable sendEvents="yes">\n      <name>ArpMac</name>\n      <dataType>string</dataType>\n      <defaultValue>0</defaultValue>\n     </stateVariable>\n  </serviceStateTable>\n  \n  </scpd>\n'

# BOM = \xef\xbb\xbf
HTTP_REQUEST_DEVICEINFOSERVICE_PREAMBLE = '/deviceinfoservice.xml'
HTTP_RESPONSE_DEVICEINFOSERVICE_ONE = 'HTTP/1.1 200 OK\r\nCONTENT-LENGTH: 9922\r\nCONTENT-TYPE: text/xml\r\nDATE: Wed, 04 Dec 2019 20:57:23 GMT\r\nLAST-MODIFIED: Sat, 01 Jan 2000 00:00:31 GMT\r\nSERVER: Unspecified, UPnP/1.0, Unspecified\r\nX-User-Agent: redsonic\r\nCONNECTION: close\r\n\r\n'
HTTP_RESPONSE_DEVICEINFOSERVICE_TWO = '<?xml version="1.0"?>\n<scpd xmlns="urn:Belkin:service-1-0">\n\n  <specVersion>\n    <major>1</major>\n    <minor>0</minor>\n  </specVersion>\n  \n  <actionList>\n    <action>\n\t<name>GetDeviceInformation</name>\n\t<argumentList>\n         <argument>\n           <retval />\n           <name>UTC</name>\n           <relatedStateVariable>UTC</relatedStateVariable>\n           <direction>in</direction>\n          </argument>\n         <argument>\n           <retval />\n           <name>TimeZone</name>\n           <relatedStateVariable>TimeZone</relatedStateVariable>\n           <direction>in</direction>\n          </argument>\n         <argument>\n           <retval />\n           <name>dst</name>\n           <relatedStateVariable>dst</relatedStateVariable>\n           <direction>in</direction>\n          </argument>\n\t\t  <argument>\n           <retval />\n           <name>DstSupported</name>\n           <relatedStateVariable>DstSupported</relatedStateVariable>\n           <direction>in</direction>\n          </argument>\n \n\t    <argument>\n\t\t<retval />\n\t\t<name>DeviceInformation</name>\n\t\t<relatedStateVariable>DeviceInformation</relatedStateVariable>\n\t\t<direction>out</direction>\n\t    </argument>\n      <!--  Adding Countdown Time -->\n      <argument>\n        <retval />\n        <name>CountdownTime</name>\n        <relatedStateVariable>CountdownTime</relatedStateVariable>\n        <direction>out</direction>\n      </argument>\n         <argument>\n           <retval />\n           <na'
HTTP_RESPONSE_DEVICEINFOSERVICE_THREE = 'me>TimeSync</name>\n           <relatedStateVariable>TimeSync</relatedStateVariable>\n           <direction>out</direction>\n          </argument>\n\t</argumentList>\n    </action>\n    <action>\n\t<name>GetInformation</name>\n\t<argumentList>\n         <argument>\n           <retval />\n           <name>UTC</name>\n           <relatedStateVariable>UTC</relatedStateVariable>\n           <direction>in</direction>\n          </argument>\n         <argument>\n           <retval />\n           <name>TimeZone</name>\n           <relatedStateVariable>TimeZone</relatedStateVariable>\n           <direction>in</direction>\n          </argument>\n         <argument>\n           <retval />\n           <name>dst</name>\n           <relatedStateVariable>dst</relatedStateVariable>\n           <direction>in</direction>\n          </argument>\n\t <argument>\n           <retval />\n           <name>DstSupported</name>\n           <relatedStateVariable>DstSupported</relatedStateVariable>\n           <direction>in</direction>\n          </argument>\n \n\t    <argument>\n\t\t<retval />\n\t\t<name>Information</name>\n\t\t<relatedStateVariable>Information</relatedStateVariable>\n\t\t<direction>out</direction>\n\t    </argument>\n         <argument>\n           <retval />\n           <name>TimeSync</name>\n           <relatedStateVariable>TimeSync</relatedStateVariable>\n           <direction>out</direction>\n          </argument>\n\t</argumentList>\n    </action>\n    <action>\n\t<name>OpenInstaAP</name>\n\t<argumentList>\n\t'
HTTP_RESPONSE_DEVICEINFOSERVICE_FOUR = '    <argument>\n\t    </argument>\n\t</argumentList>\n    </action>\n    <action>\n\t<name>CloseInstaAP</name>\n\t<argumentList>\n\t    <argument>\n\t    </argument>\n\t</argumentList>\n    </action>\n    <action>\n\t<name>GetConfigureState</name>\n\t<argumentList>\n\t    <argument>\n\t\t<retval />\n\t\t<name>ConfigureState</name>\n\t\t<relatedStateVariable>ConfigureState</relatedStateVariable>\n\t\t<direction>out</direction>\n\t    </argument>\n\t</argumentList>\n    </action>\n    <action>\n      <name>InstaConnectHomeNetwork</name>    \n      <argumentList>\n         <argument>\n           <retval />\n           <name>ssid</name>\n           <relatedStateVariable>ssid</relatedStateVariable>\n           <direction>in</direction>\n         </argument>\n         <argument>\n\t    <retval />\n\t    <name>auth</name>\n\t    <relatedStateVariable>auth</relatedStateVariable>\n\t    <direction>in</direction>\n        </argument>\n        <argument>\n\t    <retval />\n            <name>password</name>\n            <relatedStateVariable>password</relatedStateVariable>\n            <direction>in</direction>\n       </argument>\n       <argument>\n            <retval />\n            <name>encrypt</name>\n            <relatedStateVariable>encrypt</relatedStateVariable>\n            <direction>in</direction>\n       </argument>\n       <argument>\n            <retval />\n            <name>channel</name>\n            <relatedStateVariable>channel</relatedStateVariable>\n            <direction>in</direction>\n       </argument'
HTTP_RESPONSE_DEVICEINFOSERVICE_FIVE = '>\n\t<argument>\n\t    <retval />\n\t    <name>brlist</name>\n\t    <relatedStateVariable>brlist</relatedStateVariable>\n\t    <direction>in</direction>\n\t</argument>\n      </argumentList>\n    </action>\n    <action>\n\t<name>UpdateBridgeList</name>\n\t<argumentList>\n\t    <argument>\n\t\t<retval />\n\t\t<name>BridgeList</name>\n\t\t<relatedStateVariable>BridgeList</relatedStateVariable>\n\t\t<direction>in</direction>\n\t    </argument>\n\t</argumentList>\n    </action>\n    <action>\n\t<name>GetRouterInformation</name>\n\t<argumentList>\n\t    <argument>\n\t\t<retval />\n\t\t<name>mac</name>\n\t\t<relatedStateVariable>mac</relatedStateVariable>\n\t\t<direction>out</direction>\n\t    </argument>\n         <argument>\n           <retval />\n           <name>ssid</name>\n           <relatedStateVariable>ssid</relatedStateVariable>\n           <direction>out</direction>\n         </argument>\n         <argument>\n\t    <retval />\n\t    <name>auth</name>\n\t    <relatedStateVariable>auth</relatedStateVariable>\n\t    <direction>out</direction>\n        </argument>\n        <argument>\n\t    <retval />\n            <name>password</name>\n            <relatedStateVariable>password</relatedStateVariable>\n            <direction>out</direction>\n       </argument>\n       <argument>\n            <retval />\n            <name>encrypt</name>\n            <relatedStateVariable>encrypt</relatedStateVariable>\n            <direction>out</direction>\n       </argument>\n       <argument>\n            <retval />\n            <name>chan'
HTTP_RESPONSE_DEVICEINFOSERVICE_SIX = 'nel</name>\n            <relatedStateVariable>channel</relatedStateVariable>\n            <direction>out</direction>\n       </argument>\n\t</argumentList>\n    </action>\n    <action>\n    <name>InstaRemoteAccess</name>\n    <argumentList>\n    <argument>\n    <retval />\n    <name>DeviceId</name>\n    <relatedStateVariable>DeviceId</relatedStateVariable>\n    <direction>in</direction>\n    </argument>\n    <argument>\n    <retval />\n    <name>dst</name>\n    <relatedStateVariable>dst</relatedStateVariable>\n    <direction>in</direction>\n    </argument>\n    <argument>\n    <retval />\n    <name>HomeId</name>\n    <relatedStateVariable>HomeId</relatedStateVariable>\n    <direction>in</direction>\n    </argument>\n    <argument>\n    <retval />\n    <name>DeviceName</name>\n    <relatedStateVariable>DeviceName</relatedStateVariable>\n    <direction>in</direction>\n    </argument>\n    <argument>\n    <retval />\n    <name>MacAddr</name>\n    <relatedStateVariable>MacAddr</relatedStateVariable>\n    <direction>in</direction>\n    </argument>\n    <argument>\n    <retval />\n    <name>pluginprivateKey</name>\n    <relatedStateVariable>pluginprivateKey</relatedStateVariable>\n    <direction>in</direction>\n    </argument>\n    <argument>\n    <retval />\n    <name>smartprivateKey</name>\n    <relatedStateVariable>smartprivateKey</relatedStateVariable>\n    <direction>in</direction>\n    </argument>\n    <argument>\n    <retval />\n    <name>smartUniqueId</name>\n    <relatedStateVariable>sma'
HTTP_RESPONSE_DEVICEINFOSERVICE_SEVEN = 'rtUniqueId</relatedStateVariable>\n    <direction>in</direction>\n    </argument>\t \t  \n    <argument>\n    <retval />\n    <name>numSmartDev</name>\n    <relatedStateVariable>numSmartDev</relatedStateVariable>\n    <direction>in</direction>\n    </argument>\t \t  \n    </argumentList>\n    </action>\n</actionList>\n\n  <serviceStateTable>\n  \n    <stateVariable sendEvents="yes">\n      <name>DeviceInformation</name>\n      <dataType>string</dataType>\n      <defaultValue>0</defaultValue>\n    </stateVariable>\n\n    <!--  Adding Countdown Time -->\n    <stateVariable sendEvents="yes">\n      <name>CountdownTime</name>\n      <dataType>string</dataType>\n      <defaultValue>0</defaultValue>\n    </stateVariable>\n\n    <stateVariable sendEvents="yes">\n      <name>Information</name>\n      <dataType>string</dataType>\n      <defaultValue>0</defaultValue>\n    </stateVariable>\n\n    <stateVariable sendEvents="yes">\n      <name>ConfigureState</name>\n      <dataType>string</dataType>\n      <defaultValue>0</defaultValue>\n    </stateVariable>\n\n    <stateVariable sendEvents="yes">\n      <name>BridgeList</name>\n      <dataType>string</dataType>\n      <defaultValue>0</defaultValue>\n    </stateVariable>\n\n    <stateVariable sendEvents="yes">\n      <name>mac</name>\n      <dataType>string</dataType>\n      <defaultValue>0</defaultValue>\n    </stateVariable>\n\n    <stateVariable sendEvents="yes">\n      <name>ssid</name>\n      <dataType>string</dataType>\n      <defaultValue>0</defaultV'
HTTP_RESPONSE_DEVICEINFOSERVICE_EIGHT = 'alue>\n    </stateVariable>\n\n    <stateVariable sendEvents="yes">\n      <name>auth</name>\n      <dataType>string</dataType>\n      <defaultValue>0</defaultValue>\n    </stateVariable>\n\n    <stateVariable sendEvents="yes">\n      <name>password</name>\n      <dataType>string</dataType>\n      <defaultValue>0</defaultValue>\n    </stateVariable>\n\n    <stateVariable sendEvents="yes">\n      <name>encrypt</name>\n      <dataType>string</dataType>\n      <defaultValue>0</defaultValue>\n    </stateVariable>\n\n    <stateVariable sendEvents="yes">\n      <name>channel</name>\n      <dataType>string</dataType>\n      <defaultValue>0</defaultValue>\n    </stateVariable>\n\n  <stateVariable sendEvents="yes">\t\n\t<name>PairingStatus</name>\n      <dataType>string</dataType>\n      <defaultValue>Connecting</defaultValue>\n    </stateVariable>\n\n    <stateVariable sendEvents="yes">\n    <name>statusCode</name>\n    <dataType>string</dataType>\n    <defaultValue>0</defaultValue>\n    </stateVariable>\n\n    <stateVariable sendEvents="yes">\n    <name>TimeSync</name>\n    <dataType>string</dataType>\n    <defaultValue>0</defaultValue>\n    </stateVariable>\n\n  </serviceStateTable>\n  \n  </scpd>\n'

# BOM = \xef\xbb\xbf
HTTP_REQUEST_INSIGHTSERVICE_PREAMBLE = '/insightservice.xml'
HTTP_RESPONSE_INSIGHTSERVICE_ONE = 'HTTP/1.1 200 OK\r\nCONTENT-LENGTH: 6336\r\nCONTENT-TYPE: text/xml\r\nDATE: Wed, 04 Dec 2019 20:57:23 GMT\r\nLAST-MODIFIED: Sat, 01 Jan 2000 00:00:31 GMT\r\nSERVER: Unspecified, UPnP/1.0, Unspecified\r\nX-User-Agent: redsonic\r\nCONNECTION: close\r\n\r\n'
HTTP_RESPONSE_INSIGHTSERVICE_TWO = '<?xml version="1.0"?>\n<scpd xmlns="urn:Belkin:service-1-0">\n\n  <specVersion>\n    <major>1</major>\n    <minor>0</minor>\n  </specVersion>\n  \n  <actionList>\n\n<action>\n  <name>GetPower</name>\n  <argumentList>\n     <argument>\n       <retval />\n       <name>InstantPower</name>\n       <relatedStateVariable>InstantPower</relatedStateVariable>\n       <direction>out</direction>\n      </argument>\n  </argumentList>\n</action>\n\n<action>\n  <name>GetTodayKWH</name>\n  <argumentList>\n     <argument>\n       <retval />\n       <name>TodayKWH</name>\n       <relatedStateVariable>TodayKWH</relatedStateVariable>\n       <direction>out</direction>\n      </argument>\n  </argumentList>\n</action>\n\n<action>\n  <name>SetAutoPowerThreshold</name>\n  <argumentList>\n     <argument>\n       <retval />\n       <name>PowerThreshold</name>\n       <relatedStateVariable>PowerThreshold</relatedStateVariable>\n       <direction>in</direction>\n      </argument>\n  </argumentList>\n</action>\n\n<action>\n  <name>GetPowerThreshold</name>\n  <argumentList>\n     <argument>\n       <retval />\n       <name>PowerThreshold</name>\n       <relatedStateVariable>PowerThreshold</relatedStateVariable>\n       <direction>out</direction>\n      </argument>\n  </argumentList>\n</action>\n\n<action>\n  <name>SetPowerThreshold</name>\n  <argumentList>\n     <argument>\n       <retval />\n       <name>PowerThreshold</name>\n       <relatedStateVariable>PowerThreshold</relatedStateVariable>\n       <direction>in</direction'
HTTP_RESPONSE_INSIGHTSERVICE_THREE = '>\n      </argument>\n  </argumentList>\n</action>\n\n<action>\n  <name>ResetPowerThreshold</name>\n  <argumentList>\n     <argument>\n       <retval />\n       <name>PowerThreshold</name>\n       <relatedStateVariable>PowerThreshold</relatedStateVariable>\n       <direction>in</direction>\n      </argument>\n  </argumentList>\n</action>\n\n<action>\n  <name>GetInsightInfo</name>\n  <argumentList>\n  <argument>\n  <retval />\n  <name>InsightInfo</name>\n  <relatedStateVariable>InsightInfo</relatedStateVariable>\n  <direction>out</direction>\n  </argument>\n  </argumentList>\n</action>\n\n<action>\n  <name>GetInsightParams</name>\n  <argumentList>\n  <argument>\n  <retval />\n  <name>InsightParams</name>\n  <relatedStateVariable>InsightParams</relatedStateVariable>\n  <direction>out</direction>\n  </argument>\n  </argumentList>\n</action>\n\n<action>\n  <name>GetONFor</name>\n  <argumentList>\n  <argument>\n  <retval />\n  <name>ONFor</name>\n  <relatedStateVariable>ONFor</relatedStateVariable>\n  <direction>out</direction>\n  </argument>\n  </argumentList>\n</action>\n\n<action>\n  <name>GetInSBYSince</name>\n  <argumentList>\n  <argument>\n  <retval />\n  <name>InSBYSince</name>\n  <relatedStateVariable>InSBYSince</relatedStateVariable>\n  <direction>out</direction>\n   </argument>\n   </argumentList>\n</action>\n\n\n<action>\n  <name>GetTodayONTime</name>\n  <argumentList>\n  <argument>\n  <retval />\n  <name>TodayONTime</name>\n  <relatedStateVariable>TodayONTime</relatedStateVariable>\n  <direction>out</'
HTTP_RESPONSE_INSIGHTSERVICE_FOUR = 'direction>\n   </argument>\n   </argumentList>\n</action>\n\n\n<action>\n  <name>GetTodaySBYTime</name>\n  <argumentList>\n  <argument>\n  <retval />\n  <name>TodaySBYTime</name>\n  <relatedStateVariable>TodaySBYTime</relatedStateVariable>\n  <direction>out</direction>\n   </argument>\n   </argumentList>\n</action>\n  \n<action>\n  <name>ScheduleDataExport</name>\n  <argumentList>\n     <argument>\n       <retval />\n       <name>EmailAddress</name>\n       <relatedStateVariable>EmailAddress</relatedStateVariable>\n       <direction>in</direction>\n     </argument>\n     <argument>\n       <retval />\n       <name>DataExportType</name>\n       <relatedStateVariable>DataExportType</relatedStateVariable>\n       <direction>in</direction>\n     </argument>\n  </argumentList>\n</action>\n\n<action>\n  <name>GetDataExportInfo</name>\n  <argumentList>\n     <argument>\n       <retval />\n       <name>LastDataExportTS</name>\n       <relatedStateVariable>LastDataExportTS</relatedStateVariable>\n       <direction>out</direction>\n     </argument>\n     <argument>\n       <retval />\n       <name>DataExportType</name>\n       <relatedStateVariable>DataExportType</relatedStateVariable>\n       <direction>out</direction>\n     </argument>\n     <argument>\n       <retval />\n       <name>EmailAddress</name>\n       <relatedStateVariable>EmailAddress</relatedStateVariable>\n       <direction>out</direction>\n     </argument>\n  </argumentList>\n</action>\n\n</actionList>\n  \n\n  <serviceStateTable>\n  \n    <st'
HTTP_RESPONSE_INSIGHTSERVICE_FIVE = 'ateVariable sendEvents="yes">\n      <name>InstantPower</name>\n      <dataType>String</dataType>\n      <defaultValue>0</defaultValue>\n    </stateVariable>\n    <stateVariable sendEvents="yes">\n      <name>TodayKWH</name>\n      <dataType>String</dataType>\n      <defaultValue>0</defaultValue>\n    </stateVariable>\n    <stateVariable sendEvents="yes">\n      <name>InsightInfo</name>\n      <dataType>String</dataType>\n      <defaultValue>0</defaultValue>\n    </stateVariable>\n    <stateVariable sendEvents="yes">\n      <name>InsightParams</name>\n      <dataType>String</dataType>\n      <defaultValue>0</defaultValue>\n    </stateVariable>\n    <stateVariable sendEvents="yes">\n      <name>TodayONTime</name>\n      <dataType>String</dataType>\n      <defaultValue>0</defaultValue>\n    </stateVariable>\n    <stateVariable sendEvents="yes">\n      <name>InSBYSince</name>\n      <dataType>String</dataType>\n      <defaultValue>0</defaultValue>\n    </stateVariable>\n    <stateVariable sendEvents="yes">\n      <name>ONFor</name>\n      <dataType>String</dataType>\n      <defaultValue>0</defaultValue>\n    </stateVariable>\n    <stateVariable sendEvents="yes">\n      <name>TodaySBYTime</name>\n      <dataType>String</dataType>\n      <defaultValue>0</defaultValue>\n    </stateVariable>\n    <stateVariable sendEvents="yes">\n      <name>PowerThreshold</name>\n      <dataType>String</dataType>\n      <defaultValue>0</defaultValue>\n    </stateVariable>\n    <stateVariable sendEvents='
HTTP_RESPONSE_INSIGHTSERVICE_SIX = '"yes">\n      <name>EmailAddress</name>\n      <dataType>string</dataType>\n      <defaultValue>0</defaultValue>\n    </stateVariable>\n    <stateVariable sendEvents="yes">\n      <name>DataExportType</name>\n      <dataType>string</dataType>\n      <defaultValue>0</defaultValue>\n    </stateVariable>\n    <stateVariable sendEvents="yes">\n      <name>LastDataExportTS</name>\n      <dataType>string</dataType>\n      <defaultValue>0</defaultValue>\n    </stateVariable>\n\n  </serviceStateTable>\n  \n  </scpd>\n'

HTTP_REQUEST_SMARTSETUP_PREAMBLE = '/smartsetup.xml'
HTTP_RESPONSE_SMARTSETUP_ONE = 'HTTP/1.1 200 OK\r\nCONTENT-LENGTH: 2536\r\nCONTENT-TYPE: text/xml\r\nDATE: Wed, 04 Dec 2019 20:57:23 GMT\r\nLAST-MODIFIED: Sat, 01 Jan 2000 00:00:31 GMT\r\nSERVER: Unspecified, UPnP/1.0, Unspecified\r\nX-User-Agent: redsonic\r\nCONNECTION: close\r\n\r\n'
HTTP_RESPONSE_SMARTSETUP_TWO = '<?xml version="1.0"?>\n<scpd xmlns="urn:Belkin:service-1-0">\n\n  <specVersion>\n    <major>1</major>\n    <minor>0</minor>\n  </specVersion>\n  \n  <actionList>\n    <action>\n        <name>PairAndRegister</name>    \n\t<argumentList>\n\t<argument>\n\t\t<retval />\n\t    \t<name>PairingData</name>\n            \t<relatedStateVariable>PairingData</relatedStateVariable>\n\t    \t<direction>in</direction>\n\t</argument>\n\t<argument>\n\t\t<retval />\n\t\t<name>RegistrationData</name>\n\t\t<relatedStateVariable>RegistrationData</relatedStateVariable>\n\t\t<direction>in</direction>\n\t</argument>\n\t<argument>\n\t\t<retval />\n\t\t<name>PairingStatus</name>\n\t\t<relatedStateVariable>PairingStatus</relatedStateVariable>\n\t\t<direction>out</direction>\n\t</argument>\n\t</argumentList>\n    </action>\n    \n    <action>\n\t<name>GetRegistrationData</name>    \n\t<argumentList>\n\t<argument>\n           \t<retval />\n           \t<name>SmartDeviceData</name>\n           \t<relatedStateVariable>SmartDeviceData</relatedStateVariable>\n           \t<direction>in</direction>\n\t</argument>         \n        <argument>\n\t\t<retval />\n        \t<name>RegistrationData</name>\n         \t<relatedStateVariable>RegistrationData</relatedStateVariable>\n         \t<direction>out</direction>\n        </argument>\n       \t</argumentList>       \n    </action>\n    \n    <action>\n\t<name>GetRegistrationStatus</name>    \n\t<argumentList>\n\t<argument>\n           \t<retval />\n           \t<name>RegistrationStatus</name>\n           \t<relatedStateVariable>Re'
HTTP_RESPONSE_SMARTSETUP_THREE = 'gistrationStatus</relatedStateVariable>\n           \t<direction>out</direction>\n\t</argument>         \n\t<argument>\n           \t<retval />\n           \t<name>StatusCode</name>\n           \t<relatedStateVariable>StatusCode</relatedStateVariable>\n           \t<direction>out</direction>\n\t</argument>         \n\t</argumentList>       \n    </action>\n\n  </actionList>\n\n  <serviceStateTable>\n    <stateVariable sendEvents="yes">\t\n\t<name>PairingStatus</name>\n      \t<dataType>string</dataType>\n      \t<defaultValue>0</defaultValue>\n    </stateVariable>\n\n    <stateVariable sendEvents="yes">\n      \t<name>RegistrationData</name>\n      \t<dataType>string</dataType>\n      \t<defaultValue>0</defaultValue>\n    </stateVariable>\n\n    <stateVariable sendEvents="yes">\n      \t<name>StatusCode</name>\n      \t<dataType>string</dataType>\n      \t<defaultValue>0</defaultValue>\n    </stateVariable>\n\n    <stateVariable sendEvents="yes">\n      \t<name>RegistrationStatus</name>\n      \t<dataType>string</dataType>\n      \t<defaultValue>0</defaultValue>\n    </stateVariable>\n  </serviceStateTable>\n\n  </scpd>\n'

HTTP_REQUEST_MANUFACTURE_PREAMBLE = '/manufacture.xml'
HTTP_RESPONSE_MANUFACTURE_ONE = 'HTTP/1.1 200 OK\r\nCONTENT-LENGTH: 642\r\nCONTENT-TYPE: text/xml\r\nDATE: Wed, 04 Dec 2019 20:57:23 GMT\r\nLAST-MODIFIED: Sat, 01 Jan 2000 00:00:31 GMT\r\nSERVER: Unspecified, UPnP/1.0, Unspecified\r\nX-User-Agent: redsonic\r\nCONNECTION: close\r\n\r\n'
HTTP_RESPONSE_MANUFACTURE_TWO = '<?xml version="1.0"?>\n<scpd xmlns="urn:Belkin:service-1-0">\n\n  <specVersion>\n    <major>1</major>\n    <minor>0</minor>\n  </specVersion>\n\n  <actionList>\n    <action>\n      <name>GetManufactureData</name>\n      <argumentList>\n        <argument>\n          <name>ManufactureData</name>\n          <direction>out</direction>\n          <relatedStateVariable>ManufactureData</relatedStateVariable>\n        </argument>\n      </argumentList>\n    </action>\n  </actionList>\n\n  <serviceStateTable>\n    <stateVariable sendEvent="no">\n      <name>ManufactureData</name>\n      <dataType>string</dataType>\n    </stateVariable>\n  </serviceStateTable>\n\n</scpd>\n'

HTTP_POST_COMMAND_PREAMBLE = '/upnp/control/basicevent1'
HTTP_POST_COMMAND_ON = '<BinaryState>1</BinaryState>'
HTTP_POST_STATUS_PREAMBLE = '/upnp/control/insight1'
HTTP_RESPONSE_COMMAND_OK = 'HTTP/1.1 200 OK\r\nCONTENT-LENGTH: 435\r\nCONTENT-TYPE: text/xml; charset="utf-8"\r\nDATE: Wed, 04 Dec 2019 20:57:23 GMT\r\nEXT:\r\nSERVER: Unspecified, UPnP/1.0, Unspecified\r\nX-User-Agent: redsonic\r\n\r\n'
HTTP_RESPONSE_STATUS_OK = 'HTTP/1.1 200 OK\r\nCONTENT-LENGTH: 330\r\nCONTENT-TYPE: text/xml; charset="utf-8"\r\nDATE: Sun, 02 Jan 2000 02:08:01 GMT\r\nEXT:\r\nSERVER: Unspecified, UPnP/1.0, Unspecified\r\nX-User-Agent: redsonic\r\n\r\n'
HTTP_RESPONSE_COMMAND_ON = '<s:Envelope xmlns:s="http://schemas.xmlsoap.org/soap/envelope/" s:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"><s:Body>\n<u:SetBinaryStateResponse xmlns:u="urn:Belkin:service:basicevent:1">\r\n<BinaryState>8|1575492954|89|8483|94128|1209600|18|18120|2334843|26129393</BinaryState>\r\n<CountdownEndTime>0</CountdownEndTime>\r\n<deviceCurrentTime>1575493043</deviceCurrentTime>\r\n</u:SetBinaryStateResponse>\r\n</s:Body> </s:Envelope>'
HTTP_RESPONSE_COMMAND_OFF = '<s:Envelope xmlns:s="http://schemas.xmlsoap.org/soap/envelope/" s:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"><s:Body>\n<u:SetBinaryStateResponse xmlns:u="urn:Belkin:service:basicevent:1">\r\n<BinaryState>0|1575492954|89|8483|94128|1209600|18|18120|2334843|26129393</BinaryState>\r\n<CountdownEndTime>0</CountdownEndTime>\r\n<deviceCurrentTime>1575493043</deviceCurrentTime>\r\n</u:SetBinaryStateResponse>\r\n</s:Body> </s:Envelope>'
HTTP_RESPONSE_STATUS_ON = '<s:Envelope xmlns:s="http://schemas.xmlsoap.org/soap/envelope/" s:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"><s:Body>\n<u:GetInsightParamsResponse xmlns:u="urn:Belkin:service:metainfo:1">\r\n<InsightParams>8|0|0|8365|0|0|0|0|2301402|0.000000|8000</InsightParams>\r\n</u:GetInsightParamsResponse>\r\n</s:Body> </s:Envelope>'
HTTP_RESPONSE_STATUS_OFF = '<s:Envelope xmlns:s="http://schemas.xmlsoap.org/soap/envelope/" s:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"><s:Body>\n<u:GetInsightParamsResponse xmlns:u="urn:Belkin:service:metainfo:1">\r\n<InsightParams>0|0|0|8365|0|0|0|0|2301402|0.000000|8000</InsightParams>\r\n</u:GetInsightParamsResponse>\r\n</s:Body> </s:Envelope>'


#HTTP_REQUEST__PREAMBLE = ''
#HTTP_RESPONSE__ONE = ''
#HTTP_RESPONSE__TWO = ''
#HTTP_RESPONSE__THREE = ''
#HTTP_RESPONSE__FOUR = ''
#HTTP_RESPONSE__FIVE = ''
#HTTP_RESPONSE__SIX = ''

HTTP_SOAP_ENVELOPE_TAG_OPEN = "<s:Envelope"
HTTP_SOAP_ENVELOPE_TAG_CLOSE = "</s:Envelope>"

class SoapMessageFragmentHandler:
    def __init__(self):
        self.fragments = []

class WemoHandler:
    def __init__(self, config, logger, result):
        self.config = config["wemo"]
        self.config["deviceIpAddress"] = config["deviceIpAddress"]
        #self.config["iot_subnet"] = config["iot_subnet"]
        #self.config["external_subnet"] = config["external_subnet"]
        self.logger = logger
        self.result = result
        self.partial_soap_messages = {}

        # Build the command response array
        self.wemo_get_response_array = {}
        self.wemo_get_response_array[HTTP_REQUEST_SETUP_PREAMBLE] = []
        self.wemo_get_response_array[HTTP_REQUEST_SETUP_PREAMBLE].append(HTTP_RESPONSE_SETUP_ONE)
        self.wemo_get_response_array[HTTP_REQUEST_SETUP_PREAMBLE].append(HTTP_RESPONSE_SETUP_TWO)
        self.wemo_get_response_array[HTTP_REQUEST_SETUP_PREAMBLE].append(HTTP_RESPONSE_SETUP_THREE)
        self.wemo_get_response_array[HTTP_REQUEST_SETUP_PREAMBLE].append(HTTP_RESPONSE_SETUP_FOUR)
        self.wemo_get_response_array[HTTP_REQUEST_SETUP_PREAMBLE].append(HTTP_RESPONSE_SETUP_FIVE)

        self.wemo_get_response_array[HTTP_REQUEST_SETUPSERVICE_PREAMBLE] = []
        self.wemo_get_response_array[HTTP_REQUEST_SETUPSERVICE_PREAMBLE].append(HTTP_RESPONSE_SETUPSERVICE_ONE)
        self.wemo_get_response_array[HTTP_REQUEST_SETUPSERVICE_PREAMBLE].append(HTTP_RESPONSE_SETUPSERVICE_TWO)
        self.wemo_get_response_array[HTTP_REQUEST_SETUPSERVICE_PREAMBLE].append(HTTP_RESPONSE_SETUPSERVICE_THREE)
        self.wemo_get_response_array[HTTP_REQUEST_SETUPSERVICE_PREAMBLE].append(HTTP_RESPONSE_SETUPSERVICE_FOUR)

        self.wemo_get_response_array[HTTP_REQUEST_TIMESYNCSERVICE_PREAMBLE] = []
        self.wemo_get_response_array[HTTP_REQUEST_TIMESYNCSERVICE_PREAMBLE].append(HTTP_RESPONSE_TIMESYNCSERVICE_ONE)
        self.wemo_get_response_array[HTTP_REQUEST_TIMESYNCSERVICE_PREAMBLE].append(HTTP_RESPONSE_TIMESYNCSERVICE_TWO)
        self.wemo_get_response_array[HTTP_REQUEST_TIMESYNCSERVICE_PREAMBLE].append(HTTP_RESPONSE_TIMESYNCSERVICE_THREE)

        self.wemo_get_response_array[HTTP_REQUEST_EVENTSERVICE_PREAMBLE] = []
        self.wemo_get_response_array[HTTP_REQUEST_EVENTSERVICE_PREAMBLE].append(HTTP_RESPONSE_EVENTSERVICE_ONE)
        self.wemo_get_response_array[HTTP_REQUEST_EVENTSERVICE_PREAMBLE].append(HTTP_RESPONSE_EVENTSERVICE_TWO)
        self.wemo_get_response_array[HTTP_REQUEST_EVENTSERVICE_PREAMBLE].append(HTTP_RESPONSE_EVENTSERVICE_TWOA)
        self.wemo_get_response_array[HTTP_REQUEST_EVENTSERVICE_PREAMBLE].append(HTTP_RESPONSE_EVENTSERVICE_THREE)
        self.wemo_get_response_array[HTTP_REQUEST_EVENTSERVICE_PREAMBLE].append(HTTP_RESPONSE_EVENTSERVICE_THREEA)
        self.wemo_get_response_array[HTTP_REQUEST_EVENTSERVICE_PREAMBLE].append(HTTP_RESPONSE_EVENTSERVICE_FOUR)
        self.wemo_get_response_array[HTTP_REQUEST_EVENTSERVICE_PREAMBLE].append(HTTP_RESPONSE_EVENTSERVICE_FOURA)
        self.wemo_get_response_array[HTTP_REQUEST_EVENTSERVICE_PREAMBLE].append(HTTP_RESPONSE_EVENTSERVICE_FIVE)
        self.wemo_get_response_array[HTTP_REQUEST_EVENTSERVICE_PREAMBLE].append(HTTP_RESPONSE_EVENTSERVICE_FIVEA)
        self.wemo_get_response_array[HTTP_REQUEST_EVENTSERVICE_PREAMBLE].append(HTTP_RESPONSE_EVENTSERVICE_SIX)
        self.wemo_get_response_array[HTTP_REQUEST_EVENTSERVICE_PREAMBLE].append(HTTP_RESPONSE_EVENTSERVICE_SIXA)
        self.wemo_get_response_array[HTTP_REQUEST_EVENTSERVICE_PREAMBLE].append(HTTP_RESPONSE_EVENTSERVICE_SEVEN)
        self.wemo_get_response_array[HTTP_REQUEST_EVENTSERVICE_PREAMBLE].append(HTTP_RESPONSE_EVENTSERVICE_SEVENA)
        self.wemo_get_response_array[HTTP_REQUEST_EVENTSERVICE_PREAMBLE].append(HTTP_RESPONSE_EVENTSERVICE_EIGHT)
        self.wemo_get_response_array[HTTP_REQUEST_EVENTSERVICE_PREAMBLE].append(HTTP_RESPONSE_EVENTSERVICE_EIGHTA)
        self.wemo_get_response_array[HTTP_REQUEST_EVENTSERVICE_PREAMBLE].append(HTTP_RESPONSE_EVENTSERVICE_NINE)
        self.wemo_get_response_array[HTTP_REQUEST_EVENTSERVICE_PREAMBLE].append(HTTP_RESPONSE_EVENTSERVICE_NINEA)
        self.wemo_get_response_array[HTTP_REQUEST_EVENTSERVICE_PREAMBLE].append(HTTP_RESPONSE_EVENTSERVICE_TEN)
        self.wemo_get_response_array[HTTP_REQUEST_EVENTSERVICE_PREAMBLE].append(HTTP_RESPONSE_EVENTSERVICE_TENA)
        self.wemo_get_response_array[HTTP_REQUEST_EVENTSERVICE_PREAMBLE].append(HTTP_RESPONSE_EVENTSERVICE_ELEVEN)
        self.wemo_get_response_array[HTTP_REQUEST_EVENTSERVICE_PREAMBLE].append(HTTP_RESPONSE_EVENTSERVICE_ELEVENA)
        self.wemo_get_response_array[HTTP_REQUEST_EVENTSERVICE_PREAMBLE].append(HTTP_RESPONSE_EVENTSERVICE_TWELVE)
        self.wemo_get_response_array[HTTP_REQUEST_EVENTSERVICE_PREAMBLE].append(HTTP_RESPONSE_EVENTSERVICE_TWELVEA)
        self.wemo_get_response_array[HTTP_REQUEST_EVENTSERVICE_PREAMBLE].append(HTTP_RESPONSE_EVENTSERVICE_THIRTEEN)
        self.wemo_get_response_array[HTTP_REQUEST_EVENTSERVICE_PREAMBLE].append(HTTP_RESPONSE_EVENTSERVICE_THIRTEENA)
        self.wemo_get_response_array[HTTP_REQUEST_EVENTSERVICE_PREAMBLE].append(HTTP_RESPONSE_EVENTSERVICE_FOURTEEN)
        self.wemo_get_response_array[HTTP_REQUEST_EVENTSERVICE_PREAMBLE].append(HTTP_RESPONSE_EVENTSERVICE_FOURTEENA)
        self.wemo_get_response_array[HTTP_REQUEST_EVENTSERVICE_PREAMBLE].append(HTTP_RESPONSE_EVENTSERVICE_FIFTEEN)
        self.wemo_get_response_array[HTTP_REQUEST_EVENTSERVICE_PREAMBLE].append(HTTP_RESPONSE_EVENTSERVICE_FIFTEENA)
        self.wemo_get_response_array[HTTP_REQUEST_EVENTSERVICE_PREAMBLE].append(HTTP_RESPONSE_EVENTSERVICE_SIXTEEN)

        self.wemo_get_response_array[HTTP_REQUEST_FIRMWAREUPDATE_PREAMBLE] = []
        self.wemo_get_response_array[HTTP_REQUEST_FIRMWAREUPDATE_PREAMBLE].append(HTTP_RESPONSE_FIRMWAREUPDATE_ONE)
        self.wemo_get_response_array[HTTP_REQUEST_FIRMWAREUPDATE_PREAMBLE].append(HTTP_RESPONSE_FIRMWAREUPDATE_TWO)
        self.wemo_get_response_array[HTTP_REQUEST_FIRMWAREUPDATE_PREAMBLE].append(HTTP_RESPONSE_FIRMWAREUPDATE_THREE)

        self.wemo_get_response_array[HTTP_REQUEST_RULESSERVICE_PREAMBLE] = []
        self.wemo_get_response_array[HTTP_REQUEST_RULESSERVICE_PREAMBLE].append(HTTP_RESPONSE_RULESSERVICE_ONE)
        self.wemo_get_response_array[HTTP_REQUEST_RULESSERVICE_PREAMBLE].append(HTTP_RESPONSE_RULESSERVICE_TWO)
        self.wemo_get_response_array[HTTP_REQUEST_RULESSERVICE_PREAMBLE].append(HTTP_RESPONSE_RULESSERVICE_THREE)
        self.wemo_get_response_array[HTTP_REQUEST_RULESSERVICE_PREAMBLE].append(HTTP_RESPONSE_RULESSERVICE_FOUR)
        self.wemo_get_response_array[HTTP_REQUEST_RULESSERVICE_PREAMBLE].append(HTTP_RESPONSE_RULESSERVICE_FIVE)
        self.wemo_get_response_array[HTTP_REQUEST_RULESSERVICE_PREAMBLE].append(HTTP_RESPONSE_RULESSERVICE_SIX)
        self.wemo_get_response_array[HTTP_REQUEST_RULESSERVICE_PREAMBLE].append(HTTP_RESPONSE_RULESSERVICE_SEVEN)
        self.wemo_get_response_array[HTTP_REQUEST_RULESSERVICE_PREAMBLE].append(HTTP_RESPONSE_RULESSERVICE_EIGHT)

        self.wemo_get_response_array[HTTP_REQUEST_METAINFOSERVICE_PREAMBLE] = []
        self.wemo_get_response_array[HTTP_REQUEST_METAINFOSERVICE_PREAMBLE].append(HTTP_RESPONSE_METAINFOSERVICE_ONE)
        self.wemo_get_response_array[HTTP_REQUEST_METAINFOSERVICE_PREAMBLE].append(HTTP_RESPONSE_METAINFOSERVICE_TWO)

        self.wemo_get_response_array[HTTP_REQUEST_REMOTEACCESS_PREAMBLE] = []
        self.wemo_get_response_array[HTTP_REQUEST_REMOTEACCESS_PREAMBLE].append(HTTP_RESPONSE_REMOTEACCESS_ONE)
        self.wemo_get_response_array[HTTP_REQUEST_REMOTEACCESS_PREAMBLE].append(HTTP_RESPONSE_REMOTEACCESS_TWO)
        self.wemo_get_response_array[HTTP_REQUEST_REMOTEACCESS_PREAMBLE].append(HTTP_RESPONSE_REMOTEACCESS_THREE)
        self.wemo_get_response_array[HTTP_REQUEST_REMOTEACCESS_PREAMBLE].append(HTTP_RESPONSE_REMOTEACCESS_FOUR)

        self.wemo_get_response_array[HTTP_REQUEST_DEVICEINFOSERVICE_PREAMBLE] = []
        self.wemo_get_response_array[HTTP_REQUEST_DEVICEINFOSERVICE_PREAMBLE].append(HTTP_RESPONSE_DEVICEINFOSERVICE_ONE)
        self.wemo_get_response_array[HTTP_REQUEST_DEVICEINFOSERVICE_PREAMBLE].append(HTTP_RESPONSE_DEVICEINFOSERVICE_TWO)
        self.wemo_get_response_array[HTTP_REQUEST_DEVICEINFOSERVICE_PREAMBLE].append(HTTP_RESPONSE_DEVICEINFOSERVICE_THREE)
        self.wemo_get_response_array[HTTP_REQUEST_DEVICEINFOSERVICE_PREAMBLE].append(HTTP_RESPONSE_DEVICEINFOSERVICE_FOUR)
        self.wemo_get_response_array[HTTP_REQUEST_DEVICEINFOSERVICE_PREAMBLE].append(HTTP_RESPONSE_DEVICEINFOSERVICE_FIVE)
        self.wemo_get_response_array[HTTP_REQUEST_DEVICEINFOSERVICE_PREAMBLE].append(HTTP_RESPONSE_DEVICEINFOSERVICE_SIX)
        self.wemo_get_response_array[HTTP_REQUEST_DEVICEINFOSERVICE_PREAMBLE].append(HTTP_RESPONSE_DEVICEINFOSERVICE_SEVEN)
        self.wemo_get_response_array[HTTP_REQUEST_DEVICEINFOSERVICE_PREAMBLE].append(HTTP_RESPONSE_DEVICEINFOSERVICE_EIGHT)

        self.wemo_get_response_array[HTTP_REQUEST_INSIGHTSERVICE_PREAMBLE] = []
        self.wemo_get_response_array[HTTP_REQUEST_INSIGHTSERVICE_PREAMBLE].append(HTTP_RESPONSE_INSIGHTSERVICE_ONE)
        self.wemo_get_response_array[HTTP_REQUEST_INSIGHTSERVICE_PREAMBLE].append(HTTP_RESPONSE_INSIGHTSERVICE_TWO)
        self.wemo_get_response_array[HTTP_REQUEST_INSIGHTSERVICE_PREAMBLE].append(HTTP_RESPONSE_INSIGHTSERVICE_THREE)
        self.wemo_get_response_array[HTTP_REQUEST_INSIGHTSERVICE_PREAMBLE].append(HTTP_RESPONSE_INSIGHTSERVICE_FOUR)
        self.wemo_get_response_array[HTTP_REQUEST_INSIGHTSERVICE_PREAMBLE].append(HTTP_RESPONSE_INSIGHTSERVICE_FIVE)
        self.wemo_get_response_array[HTTP_REQUEST_INSIGHTSERVICE_PREAMBLE].append(HTTP_RESPONSE_INSIGHTSERVICE_SIX)

        self.wemo_get_response_array[HTTP_REQUEST_SMARTSETUP_PREAMBLE] = []
        self.wemo_get_response_array[HTTP_REQUEST_SMARTSETUP_PREAMBLE].append(HTTP_RESPONSE_SMARTSETUP_ONE)
        self.wemo_get_response_array[HTTP_REQUEST_SMARTSETUP_PREAMBLE].append(HTTP_RESPONSE_SMARTSETUP_TWO)
        self.wemo_get_response_array[HTTP_REQUEST_SMARTSETUP_PREAMBLE].append(HTTP_RESPONSE_SMARTSETUP_THREE)

        self.wemo_get_response_array[HTTP_REQUEST_MANUFACTURE_PREAMBLE] = []
        self.wemo_get_response_array[HTTP_REQUEST_MANUFACTURE_PREAMBLE].append(HTTP_RESPONSE_MANUFACTURE_ONE)
        self.wemo_get_response_array[HTTP_REQUEST_MANUFACTURE_PREAMBLE].append(HTTP_RESPONSE_MANUFACTURE_TWO)

        self.wemo_simulated_state = False

    def handleUDPPacket(self, ip_packet):
        # This handler does not process UDP packets; simply return
        return

    def handleTCPPacket(self, tcp_packet, ip_packet):
        # The first thing to do is confirm that we have false messaging enabled, and return if not
        if self.config["wemo_false_messages_enabled"] != "on":
            # Nothing to do; return
            return

        # For non-empty packets, check to see if they are valid HTTP requests
        http = None
        packet_has_data = (len(tcp_packet.data) > 0)
        if packet_has_data:
            try:
                http = HTTP(tcp_packet.data)

                print("Received HTTP request: \n" +
                      "Method: " + http.method + "\n" +
                      "URI: " + http.uri + "\n" +
                      "Version: " + http.version + "\n" +
                      "Host: " + str(http.host) + "\n" +
                      "Authorization: " + str(http.authorization) + "\n")
            except Exception as ex:
                # Non-HTTP packet with data was received.
                #print("HTTP exception: " + str(ex), flush=True)
                pass

            # Extract the source ip/port for checking partial fragments
            source = str(ip_packet.src) + ":" + str(tcp_packet.src_port)

            # Before processing, check to see if this is part of a partial message
            if http:
                # The data is confirmed to have a proper HTTP header, so it is the start of an HTTP message.
                # While there may be multiple ways for an HTTP header to exceed a single TCP packet, this handler will
                # ONLY check for SOAP messages, and it specifically checks for an "<s:Envelope" tag followed by a
                # </s:Envelope> closing tag at the very end of the message.
                # First, check for the opening tag.  (Tag explicitly left open to allow for additional content in the Envelope tag)
                if http.data.find(HTTP_SOAP_ENVELOPE_TAG_OPEN) > -1:
                    # This HTTP message has a SOAP envelope opening tag; look for the closing tag; MUST be at the end
                    if http.data.find(HTTP_SOAP_ENVELOPE_TAG_CLOSE) == (len(http.data) - len(HTTP_SOAP_ENVELOPE_TAG_CLOSE)):
                        # Confirmed that this HTTP message has both open & close tags.  We can let the processing logic handle as normal.
                        pass
                    else:
                        # Confirmed that this HTTP message has an open tag but NOT a close tag.  We therefore need to ack it and hold the data for processing
                        # First, acknowledge the HTTP message.
                        acknowledgement = build_tcp_ack(ip_packet, tcp_packet, False)
                        self.result.direct_messages_to_send.append(acknowledgement)

                        # Next, save the content of the message to be concatenated with future messages
                        # Note - this will overwrite any old content that was never completed
                        new_http_fragment = SoapMessageFragmentHandler()
                        new_http_fragment.fragments.append((tcp_packet.sequence, tcp_packet.data))
                        self.partial_soap_messages[source] = new_http_fragment

                        # Data is saved for processing when a fragment with the closing tag comes in.  Return in order to short-circuit the processing.
                        return
                else:
                    # This HTTP message does NOT have a SOAP envelope opening tag; therefore we assume it is a single message and process as normal
                    pass

            # The message has data but has failed the check for a valid HTTP header.  It may be a continuation of a partial message; check for fragments
            elif source in self.partial_soap_messages:
                # There is a previous fragment for this ip/port combination.  Now see if the data is valid UTF-8 (From HTTP init)
                try:
                    fragment_data = tcp_packet.data.decode('utf-8')

                    # Successful decoding, so add the fragment to the existing set of fragments for reassembly
                    self.partial_soap_messages[source].fragments.append((tcp_packet.sequence, tcp_packet.data))

                    # Now check to see if the fragment contains the closing envelope tag at the end of the data message
                    if fragment_data.find(HTTP_SOAP_ENVELOPE_TAG_CLOSE) == (len(fragment_data) - len(HTTP_SOAP_ENVELOPE_TAG_CLOSE)):
                        # This fragment has the closing tag.  Now sort the fragment list by sequence number, construct the final HTTP message
                        # TODO: this approach does NOT work for sequence #s that wrap around the 32 bit u_int max
                        # TODO: this approach assumes all fragments available when the last comes in.  Should check the full sequence # count or HTTP length for total bytes.
                        self.partial_soap_messages[source].fragments.sort(key=lambda tup: tup[0])
                        final_http_message_bytes = None
                        for fragment in self.partial_soap_messages[source].fragments:
                            if not final_http_message_bytes:
                                final_http_message_bytes = fragment[1]
                            else:
                                final_http_message_bytes += fragment[1]

                        # Clear out the existing fragment content; either it works or it doesn't, clear for next set of fragments
                        del self.partial_soap_messages[source]

                        # Attempt to create a new HTTP object with the concatenated data for processing
                        try:
                            http = HTTP(final_http_message_bytes)

                            # Successful construction; ready for processing
                            print("Constructed multi-fragment HTTP request: Method: " + http.method + "URI: " + http.uri + "\n", flush=True)
                        except Exception as ex:
                            # Failure to construct HTTP message; declare error and stop processing
                            print("ERROR: Unable to construct multi-fragment HTTP message; HTTP exception: " + str(ex), flush=True)
                            return
                    else:
                        # The fragment does not contain the closing envelope tag, so acknowledge the tcp message and return
                        acknowledgement = build_tcp_ack(ip_packet, tcp_packet, False)
                        self.result.direct_messages_to_send.append(acknowledgement)

                        # Do not process the message further until the closing tag comes in; return
                        return
                except Exception as ex:
                    # At least 1 HTTP fragment exists for this ip/port combination, but the follow-up is not UTF-8.  Ignore; do not process it.
                    return

            # The message has data, failed the check for a valid HTTP header, and does not have any fragments saved.  For now, do nothing with it.
            else:
                pass
                #print("Spurious TCP message with data, no HTTP header, and no saved fragments", flush=True)

            # Evaluate to see if we received a known command to respond to
            if http:
                # Check for GET commands
                if http.method == 'GET' and http.uri in self.wemo_get_response_array:
                    # First, acknowledge the HTTP message.
                    acknowledgement = build_tcp_ack(ip_packet, tcp_packet, False)
                    self.result.direct_messages_to_send.append(acknowledgement)

                    # Then build & send all canned responses
                    seq_num_offset = 0
                    for message in self.wemo_get_response_array[http.uri]:
                        response_content = message
                        response, response_len = build_tcp_response(response_content, ip_packet, tcp_packet, False, seq_num_offset)
                        seq_num_offset += response_len
                        self.result.direct_messages_to_send.append(response)

                    # Finally, build and send a fin message to close the interaction
                    fin_content = ""
                    fin, fin_len = build_tcp_response(fin_content, ip_packet, tcp_packet, True, seq_num_offset)
                    self.result.direct_messages_to_send.append(fin)

                # Now check for POST commands
                elif http.method == 'POST':
                    # First, acknowledge the HTTP message.
                    acknowledgement = build_tcp_ack(ip_packet, tcp_packet, False)
                    self.result.direct_messages_to_send.append(acknowledgement)

                    # Process state commands
                    if http.uri == HTTP_POST_COMMAND_PREAMBLE:
                        # Received a command to turn on or off the Wemo.  Build the HTTP OK response
                        seq_num_offset = 0
                        response_content = HTTP_RESPONSE_COMMAND_OK
                        response, response_len = build_tcp_response(response_content, ip_packet, tcp_packet, False, seq_num_offset)
                        seq_num_offset += response_len
                        self.result.direct_messages_to_send.append(response)

                        # Determine commanded state by checking for presence of "ON" command field.
                        if http.data.find(HTTP_POST_COMMAND_ON) > 0:
                            # Set simulated state to on
                            self.wemo_simulated_state = True

                            # Build the SOAP response to indicate that state has been set to on
                            response_content = HTTP_RESPONSE_COMMAND_ON
                            response, response_len = build_tcp_response(response_content, ip_packet, tcp_packet, False, seq_num_offset)
                            seq_num_offset += response_len
                            self.result.direct_messages_to_send.append(response)

                            # Finally, build and send a fin message to close the interaction
                            fin_content = ""
                            fin, fin_len = build_tcp_response(fin_content, ip_packet, tcp_packet, True, seq_num_offset)
                            self.result.direct_messages_to_send.append(fin)
                        else:
                            # Set simulated state to on
                            self.wemo_simulated_state = False

                            # Build the SOAP response to indicate that state has been set to on
                            response_content = HTTP_RESPONSE_COMMAND_OFF
                            response, response_len = build_tcp_response(response_content, ip_packet, tcp_packet, False, seq_num_offset)
                            seq_num_offset += response_len
                            self.result.direct_messages_to_send.append(response)

                            # Finally, build and send a fin message to close the interaction
                            fin_content = ""
                            fin, fin_len = build_tcp_response(fin_content, ip_packet, tcp_packet, True, seq_num_offset)
                            self.result.direct_messages_to_send.append(fin)
                    elif http.uri == HTTP_POST_STATUS_PREAMBLE:
                        # Received a command to report status of the Wemo.  Build the HTTP OK response
                        seq_num_offset = 0
                        response_content = HTTP_RESPONSE_STATUS_OK
                        response, response_len = build_tcp_response(response_content, ip_packet, tcp_packet, False, seq_num_offset)
                        seq_num_offset += response_len
                        self.result.direct_messages_to_send.append(response)

                        # Determine status to return based on current simulated state
                        if self.wemo_simulated_state:
                            # Build the SOAP response to indicate that state is currently on
                            response_content = HTTP_RESPONSE_STATUS_ON
                            response, response_len = build_tcp_response(response_content, ip_packet, tcp_packet, False, seq_num_offset)
                            seq_num_offset += response_len
                            self.result.direct_messages_to_send.append(response)

                            # Finally, build and send a fin message to close the interaction
                            fin_content = ""
                            fin, fin_len = build_tcp_response(fin_content, ip_packet, tcp_packet, True, seq_num_offset)
                            self.result.direct_messages_to_send.append(fin)
                        else:
                            # Build the SOAP response to indicate that state is currently off
                            response_content = HTTP_RESPONSE_STATUS_OFF
                            response, response_len = build_tcp_response(response_content, ip_packet, tcp_packet, False, seq_num_offset)
                            seq_num_offset += response_len
                            self.result.direct_messages_to_send.append(response)

                            # Finally, build and send a fin message to close the interaction
                            fin_content = ""
                            fin, fin_len = build_tcp_response(fin_content, ip_packet, tcp_packet, True, seq_num_offset)
                            self.result.direct_messages_to_send.append(fin)
                    else:
                        # Unknown POST command.  Report error.
                        print("Unknown HTTP message received: POST " + http.uri, Flush=True)

         # The HTTP class breaks the command into composite parts; combine to index into the command list
         #       index = http.method + " " + http.uri
         #       if index in self.wemo_response_array:
         #           # First, acknowledge the HTTP message.
         #           acknowledgement = build_tcp_ack(ip_packet, tcp_packet, False)
         #           self.result.direct_messages_to_send.append(acknowledgement)

                    # Then build & send all canned responses
         #           seq_num_offset = 0
         #           for message in self.wemo_response_array[index]:
         #               response_content = message
         #               response, response_len = build_tcp_response(response_content, ip_packet, tcp_packet, False, seq_num_offset)
         #               seq_num_offset += response_len
         #               self.result.direct_messages_to_send.append(response)

                    # Finally, build and send a fin message to close the interaction
         #           fin_content = ""
         #           fin, fin_len = build_tcp_response(fin_content, ip_packet, tcp_packet, True, seq_num_offset)
         #           self.result.direct_messages_to_send.append(fin)

        # If not a HTTP message, make sure it's not coming from the IOT device and then process SYN messages to set up connections
        if not http and ip_packet.src.find(self.config["deviceIpAddress"]) == -1:
            if tcp_packet.flag_syn and not tcp_packet.flag_ack:
                # Build the SYN/ACK response to simulate a TCP connection, and put it in the queue for responding
                self.result.direct_messages_to_send.append(build_tcp_syn_ack(ip_packet, tcp_packet))
            # ACK close connection (TCP FIN messages) from the remote client
            elif tcp_packet.flag_ack and tcp_packet.flag_fin:
                # Constuct the fin acknowledgement message and queue for responding directly
                acknowledgement = build_tcp_ack(ip_packet, tcp_packet, True)
                self.result.direct_messages_to_send.append(acknowledgement)